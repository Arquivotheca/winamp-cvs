#include ".\main.h"
#include ".\xzip\xzip.h"
#include ".\smtp\smtp.h"
#include ".\email\sendemail.h"
#include <strsafe.h>

const wchar_t* GetFileName(const wchar_t *fullname)
{
	if (!fullname) return NULL;
	const wchar_t *start = wcsrchr(fullname, L'\\');
	if (start && start != fullname) start = CharNext(start);
	
	return start; 
}

BOOL ZipData(void)
{
	BOOL retCode = FALSE;
	HZIP hz = CreateZip(settings.zipPath, 0, ZIP_FILENAME);
	if (hz)
	{
		retCode = TRUE;
		if (settings.createLOG && settings.ReadLogCollectResult()) retCode = (ZR_OK == ZipAdd(hz, GetFileName(settings.logPath),  settings.logPath, 0, ZIP_FILENAME));
		if (retCode && settings.createDMP && settings.ReadDmpCollectResult()) retCode = (ZR_OK == ZipAdd(hz, GetFileName(settings.dumpPath),  settings.dumpPath, 0, ZIP_FILENAME));
	}
	CloseZip(hz);
	return retCode;
}

BOOL SendData(HWND hwnd)
{
	BOOL retCode = FALSE;
	const wchar_t *subject = L"winamp error feedback";
	const wchar_t *senderName = L"error reporter";
	const wchar_t *recipientAddress =  L"bug@winamp.com";
	const wchar_t *recipientName =  L"Nullsoft Bug Reporting";
	wchar_t *msgInfo = _wcsdup(settings.ReadBody());

	wchar_t *p = msgInfo, *end = p + wcslen(msgInfo);
	while(p != end)
	{
		if (*p == 1) *p =  L'\r';
		if (*p == 2) *p =  L'\n';
		p++;
	}



	if (settings.sendBySMTP)
	{
		CSmtp smtp;
		CSmtpMessage msg;
		CSmtpMessageBody body;
		CSmtpAttachment attach;

		msg.Subject = subject;

		// Who the message is from
		msg.Sender.Name  = senderName;
		msg.Sender.Address = settings.smtpAddress;
		msg.Recipient.Address = recipientAddress;
		msg.Recipient.Name = recipientName;
		if(settings.zipData ) 
		{
			attach.FileName = settings.zipPath;
			msg.Attachments.Add(attach);
		}
		else
		{
			if (settings.createLOG && settings.ReadLogCollectResult()) attach.FileName = settings.logPath;
			msg.Attachments.Add(attach);
			if (settings.createDMP && settings.ReadDmpCollectResult()) attach.FileName = settings.dumpPath;
			msg.Attachments.Add(attach);
		}

		//	smtp.m_wSmtpPort = settings.smtpPort; - not working for some reasons
		if (settings.smtpAuth)
		{
			smtp.m_strUser = settings.smtpUser;
			smtp.m_strPass = settings.smtpPwd;;
		}

		body = L"This message was generated by Winamp Error Reporter v1.09.\r\nPlease check attachments for viruses.\r\n";
		body.Data.append(L"\r\n");
		body.Data.append(msgInfo);

		msg.Message.Add(body);
		retCode = smtp.Connect(settings.smtpServer);
		if ( retCode )
		{
			// Send the message and close the connection afterwards
			retCode = (smtp.SendMessage(msg) == 0);
			smtp.Close();
		}
	}
	else if(settings.sendByClient)
	{

			retCode = SendEmail(hwnd, recipientAddress, recipientName, subject, msgInfo, settings.zipPath);
	}

	return retCode;		
}

BOOL Restart(void)
{
	STARTUPINFO si = {0};
	si.cb = sizeof(si);
	si.dwFlags = STARTF_USESHOWWINDOW;
	si.wShowWindow = SW_SHOW;

	PROCESS_INFORMATION pi = {0};
	return  CreateProcess(
						settings.ReadWinamp(),	// name of executable module
						NULL,					// command line string
						NULL,					// process attributes
						NULL,					// thread attributes
						FALSE,					// handle inheritance option
						0,						// creation flags
						NULL,					// new environment block
						NULL,					// current directory name
						&si,					// startup information
						&pi						// process information
						);					
}