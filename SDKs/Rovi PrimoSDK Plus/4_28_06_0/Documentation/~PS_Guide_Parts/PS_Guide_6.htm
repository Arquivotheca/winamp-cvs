<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<TITLE>PrimoSDK Guide - Chapter 6</TITLE>
<!-- PrimoSDK version 2 -->
<!-- HTML version generated by DelPhi on 050726 -->
<!-- (c) Sonic Solutions. All Rights Reserved. -->
<LINK REL=STYLESHEET TYPE="text/css" HREF="PS_Styles-MAIN.css">
</HEAD>
<BODY>
<A ID="chapter"><IMG SRC="PS_Images/PS_Banner.jpg" WIDTH=520 HEIGHT=72></A>
<P CLASS="IndentSans" ALIGN="Right">&#169; Sonic Solutions<SUP>&#153;</SUP>. All Rights Reserved.</P>
<P CLASS="Heading1"><A ID="PrimoSDK Function Reference">6 &nbsp;PrimoSDK Function Reference</A></P>
<P CLASS="IndentSerif">PrimoSDK&#39;s function calls are covered in the following sections:</P>
<UL CLASS="IndentSerif_List"><LI><A HREF="#API Management and Status">API Management and Status</A></LI>
<LI><A HREF="#Drive Information and Status">Drive Information and Status</A></LI>
<LI><A HREF="#Drive Control">Drive Control</A></LI>
<LI><A HREF="#Disc and Image Information">Disc and Image Information</A></LI>
<LI><A HREF="#Reading and Extracting from Disc">Reading and Extracting from Disc</A></LI>
<LI><A HREF="#General Disc Write and Verify">General Disc Write and Verify</A></LI>
<LI><A HREF="#Data CD and DVD Images">Data CD and DVD Images</A></LI>
<LI><A HREF="#Audio CD Images">Audio CD Images</A></LI>
<LI><A HREF="#Video CD Images">Video CD Images</A></LI></UL>
<P CLASS="IndentSerif">To find a specific call by name, see <A HREF="PS_Guide_5.htm#Alphabetic Call List"><SPAN CLASS="Arial_Inline"><B>Alphabetic Call List</B></SPAN></A>.<BR>
<BR>
Each call entry below includes a description of the usage of the call, the value(s) returned by the call, and the call&#39;s parameter(s), if any. Parameters are categorized as follows:</P>
<UL CLASS="IndentSerif_List"><LI><B>Input</B> &#151; the value is passed into the function from the object; the object is not modified by the call.</LI>
<LI><B>Input&#47;Output</B> &#151;  the value is passed into the function from the object; the object may subsequently be modified by the call.</LI>
<LI><B>Output</B> &#151; the value of the object is filled in by the function.</LI></UL>
<P CLASS="IndentSerif"><B><FONT COLOR="ff0000">!</FONT> NOTE</B>: The following sections include references to PrimoSDK functions that are licensed on an optional basis (see <A HREF="PS_Guide_1.htm#PrimoSDK Options"><SPAN CLASS="Arial_Inline"><B>PrimoSDK Options</B></SPAN></A> in Chapter 1). For information on which functions are included in your license, or to license optional PrimoSDK functionality, please contact your Sonic representative.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="API Management and Status">6.1 &nbsp;API Management and Status</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_Trace">PrimoSDK_Trace</A>, <A HREF="#PrimoSDK_Init">PrimoSDK_Init</A>, <A HREF="#PrimoSDK_End">PrimoSDK_End</A>, <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>, <A HREF="#PrimoSDK_ReleaseHandle">PrimoSDK_ReleaseHandle</A>, <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A></P>
<P CLASS="IndentSerif">These calls are used to launch and terminate PrimoSDK, to get and release handles needed for operations, and to obtain running status information.</P>
<P CLASS="SubHead_Sans12"><A ID="Launch sequence">Launch sequence</A></P>
<P CLASS="IndentSerif">The following launch sequence is used to work with PrimoSDK:</P>
<OL CLASS="IndentSerif_NumList"><LI>Set the trace mode with <A HREF="#PrimoSDK_Trace">PrimoSDK_Trace</A>.</LI>
<LI>Initialize PrimoSDK with <A HREF="#PrimoSDK_Init">PrimoSDK_Init</A>. (To make use of PrimoSDK&#39;s streaming-related file system capabilities, licensed separately from the standard version of PrimoSDK, see instead <A HREF="PS_Guide_8.htm#PrimoSDK_InitStreamFileSystem">PrimoSDK_InitStreamFileSystem</A>).</LI>
<LI>Proceed with the desired PrimoSDK operations.</LI></OL>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_Trace">PrimoSDK_Trace</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#API Management and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_Trace sets the trace mode. If the parameter <I>dwTrace</I> is set to &quot;0,&quot; the trace mode is disabled. If not, all calls to PrimoSDK are logged in the text file <SPAN CLASS="Courier_New_Inline">&lt;<I>appname</I>&gt;.DBG</SPAN>. The PrimoSDK trace may be enabled or disabled at any time.<BR>
<BR>
<B>NOTE</B>: It may be helpful to introduce a &quot;back door&quot; in the host application allowing users to activate trace mode when needed to create a log file to aid debugging.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_Trace ( DWORD dwTrace );</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwTrace</P>
<P CLASS="Def_Field">A DWORD whose value is used to set the debug trace mode:<BR>
- if &quot;0&quot; then trace mode is disabled.<BR>
- if not &quot;0&quot; then trace mode is enabled</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_Init">PrimoSDK_Init</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#API Management and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_Init initializes the internal structures of the PrimoSDK. The version number of the initialized DLL is output with the parameter <I>pdwRelease</I>. <BR>
<BR>
<B>NOTES:<BR>
<FONT COLOR="ff0000">!</FONT> </B>If your license is for PrimoSDK Realtime and you plan to use PrimoSDK&#39;s StreamFS (streaming-related file system) functions, initialize PrimoSDK with <A HREF="PS_Guide_8.htm#PrimoSDK_InitStreamFileSystem">PrimoSDK_InitStreamFileSystem</A> instead of this call.<BR>
<B>&#187; </B>This function must be called before any all other PrimoSDK calls except PrimoSDK_Trace. The function is called only once, when the host application or module starts.<BR>
<B>&#187;</B> PrimoSDK needs an ASPI layer to communicate with both ATAPI or SCSI units. A compatible WinASPI layer or PxHelper (recommended) may be used.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_Init ( PDWORD pdwRelease );</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwRelease</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the version number of the PRIMOSDK.DLL. The version is output in the format 0xRRSSBBBB, with the following component parts:<BR>
- RR = Version number<BR>
- SS = Sub Version number<BR>
- BBBB = Build number</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_CDDVDVERSION</P>
<P CLASS="Def_Field">A retail CD and DVD version of PrimoSDK has been successfully initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_DEMOVERSION</P>
<P CLASS="Def_Field">A demo version of PrimoSDK has been successfully initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK has already been initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOASPI</P>
<P CLASS="Def_Field">The ASPI layer is not loading or is in error.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_End">PrimoSDK_End</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#API Management and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_End terminates PrimoSDK, freeing the internal structures. This function must be called after all the other PrimoSDK calls have been terminated.<BR>
<BR>
<B>NOTE</B>: Call this function only once, when the host application or module terminates.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_End ( VOID );</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="Code_Ital">VOID</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_GetHandle">PrimoSDK_GetHandle</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#API Management and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_GetHandle outputs a handle (a unique resource identifier for the PrimoSDK) that must be used in any call to PrimoSDK. The handle is output with the parameter <I>pdwHandle</I>. Multiple handles may be obtained, allowing multiple simultaneous operations on different drives.</P>
<P CLASS="IndentSerif"><B>NOTE</B>: A handle is released by calling <A HREF="#PrimoSDK_ReleaseHandle">PrimoSDK_ReleaseHandle</A>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code"><BR>
DWORD WINAPI PrimoSDK_GetHandle ( PDWORD pdwHandle );</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwHandle</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the newly-created handle.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The handle was successfully created.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_ReleaseHandle">PrimoSDK_ReleaseHandle</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#API Management and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_ReleaseHandle releases a handle that has been output by <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>. The handle to release is specified with the parameter <I>dwHandle</I>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_ReleaseHandle ( DWORD dwHandle );</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the handle to release.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The handle has been released.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#API Management and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_RunningStatus reports on the current status of the testing, recording, extracting, or erasing operation identified with the handle in the parameter <I>dwHandle</I>.<BR>
<BR>
Depending on the value specified in <I>dwFlags</I>, the call may also be used to abort the operation. Because some recording situations take time to conclude, the call may continue to return &quot;<SPAN CLASS="Courier_New_Inline">PRIMOSDK_RUNNING</SPAN>&quot; for some time after an abort request before returning &quot;<SPAN CLASS="Courier_New_Inline">PRIMOSDK_USERABORT</SPAN>.&quot;<BR>
<BR>
The sector on which the operation is currently acting is output as <I>pdwCurSector</I>, while the total number of sectors involved in the operation is output as <I>pdwTotSector</I>. <BR>
<BR>
<B>NOTES:<BR>
&#187; </B>If the operation is no longer running (the call returns PRIMOSDK_OK), use <A HREF="#PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A> to check whether or not the operation completed successfully for each of the operation&#39;s target media.<B><BR>
&#187; </B>To avoid clogging the system, this function should be called every 1, 2 or 3 seconds in a timer loop.<BR>
<B>&#187; </B>If the current operation is data mastering, <I>pdwTotSector</I> will return as &quot;<SPAN CLASS="Courier_New_Inline">0</SPAN>&quot; from the time that <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A> is launched until the premastering phase is completed and it becomes known exactly how many sectors are required.<B><BR>
&#187; </B>If PrimoSDK_RunningStatus is called after PrimoSDK_WriteImage and after the value of <I>pdwTotSector</I> becomes greater than &quot;<SPAN CLASS="Courier_New_Inline">0</SPAN>,&quot; the mastering operation will pause for 2 seconds, allowing time for the operation to be aborted before the start of any real recording. This is particularly useful in close-to-full situations because the <I>pdwSize </I>parameter of PrimoSDK_WriteImage returns only an approximation of the total sectors needed.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_RunningStatus ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwFlags,<BR>
PDWORD pdwCurSector,<BR>
PDWORD pdwTotSector </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD containing one of the following:<BR>
- PRIMOSDK_GETSTATUS gets the status of the operation;<BR>
- PRIMOSDK_ABORT aborts the operation.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwCurSector</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the number of the sector on which the operation is currently acting.</P>
<P CLASS="Code_Ital">pdwTotSector</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total sectors involved in the operation.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_RUNNING</P>
<P CLASS="Def_Field">The operation is currently running.</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The operation is no longer running. To check the result for each of the target media, use <A HREF="#PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A>.</P>
<P CLASS="Code_Ital">PRIMOSDK_USERABORT</P>
<P CLASS="Def_Field">The operation was aborted because of a call with the PRIMOSDK_ABORT flag.</P>
<P CLASS="IndentSans"><I>The following codes apply to all drives involved in the operation:</I></P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK_RunningStatus was called out of sequence. This usually indicates that a job was not started correctly (something failed) before calling this command.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field"><I>dwFlags</I> contains an invalid combination of flags.</P>
<P CLASS="Code_Ital">PRIMOSDK_FEATURE_NOT_SUPPORTED</P>
<P CLASS="Def_Field">A call was made to a function that is not available.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">There was an error writing a file during extraction or while creating an image:<BR>
- If writing to a file (for example PrimoSDK_SaveGI), this would occur if the file cannot be opened or written (for example the hard disc is full).<BR>
- If reading from a file (for example PrimoSDK_WriteGI), this would occur if the file cannot be opened or read (for example an invalid file name, or the file is on the network and the connection was lost).</P>
<P CLASS="Code_Ital">PRIMOSDK_TMPOVERFLOW</P>
<P CLASS="Def_Field">If a temporary disc cache was specified for small files while mastering, this error could be returned if there was an error writing to or reading from the temporary cache.</P>
<P CLASS="Code_Ital">PRIMOSDK_DVDSTRUCTERROR</P>
<P CLASS="Def_Field">If mastering a DVD Video, there was a problem detected in the DVD Video file set.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="Drive Information and Status">6.2 &nbsp;Drive Information and Status</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_ListSupportedUnits">PrimoSDK_ListSupportedUnits</A>, <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>, <A HREF="#PrimoSDK_UnitInfo2">PrimoSDK_UnitInfo2</A>, <A HREF="#PrimoSDK_UnitSpeeds">PrimoSDK_UnitSpeeds</A>, <A HREF="#PrimoSDK_UnitReady">PrimoSDK_UnitReady</A>, <A HREF="#PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A></P>
<P CLASS="IndentSerif">These calls are used to retrieve information related to drives and to check drive status.<BR>
<BR>
<B>NOTE</B>: Additional functionality related to drives is available via PrimoSDK Realtime, a set of optional StreamFS functions (documented in the <A HREF="PS_Guide_8.htm#StreamFS Addendum"><SPAN CLASS="Arial_Inline"><B>StreamFS Addendum</B></SPAN></A>).</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_ListSupportedUnits">PrimoSDK_ListSupportedUnits</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Information and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_ListSupportedUnits outputs a list of the drives supported by the currently initialized version of PrimoSDK. The list, output with the parameter <I>szList</I>, contains one drive per line, separated by &quot; <SPAN CLASS="Courier_New_Inline">&lt;CR&gt;&lt;LF&gt</SPAN><SPAN CLASS="_Inline">;&quot; </SPAN>and terminated by &quot; <SPAN CLASS="Courier_New_Inline">&lt;00&gt</SPAN><SPAN CLASS="_Inline">;.&quot; </SPAN>Each line contains three comma-delimited fields: Vendor ID, Product ID, and Px class.<BR>
<BR>
The &quot;class&quot; number is a proprietary number used to group drives (from either a single manufacturer or various manufacturers) whose firmware has similar characteristics. This allows Px engine to deal more effectively with any anomalies of the drives assigned to each class.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B><I>szList</I> must be at least 10,000 bytes in length.<BR>
<B>&#187; </B>The Vendor ID and the Product are returned exactly as they are spelled by the unit. If the manufacturer has left the vendor ID blank then the Vendor ID is returned as &quot; <SPAN CLASS="Courier_New_Inline">[no brand</SPAN><SPAN CLASS="_Inline">].&quot;</SPAN><BR>
<B>&#187; </B><I>szList</I> does not include drives temporarily supported via a <SPAN CLASS="Courier_New_Inline">Px.ini </SPAN>file.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_ListSupportedUnits ( PBYTE szList );</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">szList</P>
<P CLASS="Def_Field">A pointer to the BYTE buffer that is to be filled in with the list. </P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">DWORD</P>
<P CLASS="Def_Field">The number of the entries in the list.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Information and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitInfo retrieves information about the unit specified by the parameter <I>pdwUnit</I>. The type of drive is output with <I>pdwType</I>, while the Vendor, Product, and Firmware Version of the unit are output with <I>szDescr</I>. The call also retrieves the readiness state of the unit and outputs it with <I>pdwReady</I>.<BR>
<BR>
<I>pdwUnit</I> allows the unit to be identified either by drive letter, by SCSI Host&#47;ID&#47;LUN triple, or by both. The drive letter, which must be uppercase, takes precedence over the triple. The drive letter is specified with the least significant byte of the DWORD (e.g. for unit &quot;D,&quot; <I>pdwUnit</I> points to &quot;<SPAN CLASS="Courier_New_Inline">0x00000044</SPAN>&quot;), in which case the other three bytes are ignored. To identify the drive by triple, the least significant byte must be &quot;<SPAN CLASS="Courier_New_Inline">00</SPAN>&quot; or &quot;<SPAN CLASS="Courier_New_Inline">20</SPAN>&quot; (e.g. for the unit at Host 1, ID 3, Lun 0, <I>pdwUnit</I> points to &quot;<SPAN CLASS="Courier_New_Inline">0x01030000</SPAN>&quot;).<BR>
<BR>
When the function executes, the value of the DWORD pointed to by<I> pdwUnit</I> may be modified by PrimoSDK. In both of the examples above, for instance, the value would become &quot;<SPAN CLASS="Courier_New_Inline">0x01030044</SPAN>&quot; (combining the triple and the drive letter). However, if the least significant byte is given as &quot;<SPAN CLASS="Courier_New_Inline">20</SPAN>&quot; rather than &quot;<SPAN CLASS="Courier_New_Inline">00</SPAN>,&quot; PrimoSDK will not change the least significant byte to the drive letter, leaving the value of the DWORD unchanged.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>In some cases recorders of SCSI Type 4 (e.g. Yamaha CDR100) are not assigned a drive letter by the system, or the drive&#39;s letter setting (especially under Windows NT&#47;2000) may not be completely or correctly seen by the ASPI layer. In these situations the DWORD pointed to by <I>pdwUnit</I> must identify the unit by triple only, with the least significant byte given as &quot;<SPAN CLASS="Courier_New_Inline">00</SPAN>.&quot; <BR>
<B>&#187; </B>For drives that support DVD-RW and DVD+RW, the value of the parameter <I>pdwType</I> is PRIMOSDK_DVDRW.<BR>
<B>&#187; </B><I>szDescr</I> must be at least 50 bytes in length. The last 4 characters of <I>szDescr</I> always contain the firmware version of the drive.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitInfo ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PDWORD pdwType,<BR>
PBYTE szDescr,<BR>
PDWORD pdwReady </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwType</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the unit type:<BR>
- PRIMOSDK_CDROM for CD-ROM<BR>
- PRIMOSDK_CDR for supported CD-R<BR>
- PRIMOSDK_CDRW for supported CD-RW <BR>
- PRIMOSDK_DVDR for supported DVD-R<BR>
- PRIMOSDK_DVDROM for DVD-ROM<BR>
- PRIMOSDK_DVDRAM for supported DVD-RAM<BR>
- PRIMOSDK_DVDRW for supported DVD-RW <BR>
- PRIMOSDK_ROBOTICS for robotic changer<BR>
- PRIMOSDK_DVDPRW for supported DVD+RW<BR>
- PRIMOSDK_DVDPR for DVD+R<BR>
- PRIMOSDK_DVDPR9 for supported DVD+RW9<BR>
- PRIMOSDK_OTHER if the unit is of another type</P>
<P CLASS="Code_Ital">szDescr</P>
<P CLASS="Def_Field">A pointer to the BYTE that is to be filled in with the Vendor, Product, and Firmware Version of the unit (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwReady</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the unit&#39;s ready state (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- if &quot;1&quot; the unit is ready;<BR>
- if &quot;0&quot; the unit is not ready.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The requested drive does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitInfo2">PrimoSDK_UnitInfo2</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Information and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitInfo2 retrieves additional information about the unit specified by the parameter <I>pdwUnit</I> that is not covered by <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>. The class of the unit is output with <I>pdwClass</I>, and the type of bus to which the unit is connected is output with <I>pdwBusType</I>. <BR>
<BR>
The call also retrieves a list of the type of media handled by the unit. The list is output to a DWORD vector pointed to by <I>pdwTypes</I>. The last element in the vector will always be &quot;<SPAN CLASS="Courier_New_Inline">0xFFFFFFFF</SPAN>.&quot; The following examples illustrate a couple of typical <I>pdwTypes</I> vectors:</P>
<UL CLASS="IndentSerif_List"><LI>For a normal CD-RW:<BR>
&quot;<SPAN CLASS="Courier_New_Inline">PRIMOSDK_CDROM,PRIMOSDK_CDR,PRIMOSDK_CDRW,0xFFFFFFFF</SPAN>&quot;</LI>
<LI>For a combo drive (CD-RW&#47;DVD-ROM):<BR>
&quot;<SPAN CLASS="Courier_New_Inline">PRIMOSDK_CDROM,PRIMOSDK_CDR,PRIMOSDK_CDRW,PRMOSDK_DVDROM,0xFFFFFFFF</SPAN>&quot;</LI></UL>
<P CLASS="IndentSerif"><B>NOTES:<BR>
&#187; </B>The capacity of <I>pdwTypes</I> should reflect the fact that some combo units can handle multiple types of media.<BR>
<B>&#187; </B>If a drive is taken by the &quot;Silent Select&quot; mechanism, which means that it is not in the drive table but is still managed, <I>pdwClass</I> will point to a DWORD with the special value &quot;<SPAN CLASS="Courier_New_Inline">PRIMOSDK_SSCLASS</SPAN>.&quot;</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitInfo2 ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PDWORD pdwTypes,<BR>
PDWORD pdwClass,<BR>
PDWORD pdwBusType,<BR>
PDWORD pdwRFU </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwTypes</P>
<P CLASS="Def_Field">A pointer to a DWORD vector that is to be filled in with the media types handled by the unit:<BR>
- PRIMOSDK_CDROM for CD-ROM, including DDCD-ROM<BR>
- PRIMOSDK_CDR for CD-R, including DDCD-R<BR>
- PRIMOSDK_CDRW for CD-RW, including DDCD-RW<BR>
- PRIMOSDK_DVDR for DVD-R<BR>
- PRIMOSDK_DVDROM for DVD-ROM (any type)<BR>
- PRIMOSDK_DVDRAM for DVD-RAM<BR>
- PRIMOSDK_DVDRW for DVD-RW<BR>
- PRIMOSDK_DVDPRW for DVD+RW<BR>
- PRIMOSDK_DVDPR for DVD+R<BR>
- PRIMOSDK_DVDPR9 for dual-layer DVD+R<BR>
- PRIMOSDK_OTHER for other types</P>
<P CLASS="Code_Ital">pdwClass</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the class identifier assigned to the unit. Drives of different brands may be assigned to the same class.</P>
<P CLASS="Code_Ital">pdwBusType</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the type of bus to which the device is connected:<BR>
- PRIMOSDK_ATAPI = 1<BR>
- PRIMOSDK_SCSI = 2<BR>
- PRIMOSDK_1394 = 3<BR>
- PRIMOSDK_USB = 4<BR>
- PRIMOSDK_USB2 = 5<BR>
- PRIMOSDK_Unknown = 0</P>
<P CLASS="Code_Ital">pdwRFU</P>
<P CLASS="Def_Field">Reserved for future use.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The requested drive does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitSpeeds">PrimoSDK_UnitSpeeds</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Information and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitSpeeds retrieves the various speeds at which a unit operates for various operations and media types. The speeds for operations involving CD media are output with the parameter <I>pdwCDSpeeds</I>, while speeds for operations involving DVD media are output with <I>pdwDVDSpeeds</I>. The call also reports on any additional capabilities of the unit using <I>pdwCapabilities</I>.<BR>
<BR>
<I>pdwCDSpeeds</I> and <I>pdwDVDSpeeds</I> each point to a DWORD vector that is used for three sets of retrieved values (a set may be empty if it does not apply to the unit):</P>
<UL CLASS="IndentSerif_List"><LI>Reading speed (always represented by a single value giving the declared maximum);</LI>
<LI>Writing speeds for recordable media (e.g. CD-R, DVD-R);</LI>
<LI>Writing speeds for rewritable media (e.g. CD-RW, DVD-RW, DVD+RW). </LI></UL>
<P CLASS="IndentSerif">Each set in the <I>pdwCDSpeeds</I> and <I>pdwDVDSpeeds</I> vectors is terminated by <SPAN CLASS="Courier_New_Inline">0xFFFFFFFF</SPAN>. The following examples illustrate two <I>pdwCDSpeeds</I> vectors:</P>
<UL CLASS="IndentSerif_List"><LI>Unit reads at 24x, records on CD-R at 2x and 4x, and does not support recording to CD-RW:<BR>
<SPAN CLASS="Courier_New_Inline">0x00000018,0xFFFFFFFF,0x00000002,0x00000004,0xFFFFFFFF,0xFFFFFFFF</SPAN></LI>
<LI>Unit reads at 24x, records on CD-R at 2x and 4x, and records on CD-RW at 2x:<BR>
<SPAN CLASS="Courier_New_Inline">0x00000018,0xFFFFFFFF,0x00000002,0x00000004,0xFFFFFFFF,0x00000002,0xFFFFFFFF</SPAN></LI></UL>
<P CLASS="IndentSerif"><B>NOTE</B>: Because of the number of different speeds at which some drives operate, a vector of at least 20 DWORDs may be required for <I>pdwCDSpeeds</I> and at least 12 DWORDs for <I>pdwDVDSpeeds</I>.<BR>
</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitSpeeds ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PDWORD pdwCDSpeeds,<BR>
PDWORD pdwDVDSpeeds,<BR>
PDWORD pdwCapabilities </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwCDSpeeds</P>
<P CLASS="Def_Field">A pointer to a DWORD vector that is to be filled in with the unit speeds for CD, CD-R recording, and CD-RW recording.</P>
<P CLASS="Code_Ital">pdwDVDSpeeds</P>
<P CLASS="Def_Field">A pointer to a DWORD vector that is to be filled in with the unit speeds for DVD: reading, recording (e.g. DVD-R), and rewriting (e.g. DVD-RW). If the drive does not support DVD, the vector will be empty except for terminators (&quot;0xFFFFFFFF,0xFFFFFFFF,0xFFFFFFFF&quot;).</P>
<P CLASS="Code_Ital">pdwCapabilities</P>
<P CLASS="Def_Field">A pointer to a DWORD that is to be filled in with information about special drive capabilities (all of the following that apply are ORed together):<BR>
- 1st bit (0x00000001) is set if the drive supports BURN-Proof;<BR>
- 2nd bit (0x00000002) is set if the drive handles CD Text;<BR>
- 3rd bit (0x00000004) is set if the drive supports Adjustable Write Speed <SPAN CLASS="New_York_Inline">(</SPAN>AWS), and therefore accepts PRIMOSDK_BEST as a speed;<BR>
- 4th bit (0x00000008) is set if the drive supports reading DVD-ROM discs;<BR>
- 5th bit (0x00000010) is set if the drive is to open the tray after Test;<BR>
 -6th bit (0x00000020) is set if the drive is to open the tray after Record.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The requested drive does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitReady">PrimoSDK_UnitReady</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Information and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitReady tests if the unit specified with the parameter <I>pdwUnit</I> is ready. This function is optimized for use in timer loop while waiting for a drive to become ready.</P>
<P CLASS="IndentSerif"><B>NOTE</B>: The unit identified with <I>pdwUnit</I> must be a CD or DVD drive. If <I>pdwUnit</I> identifies a hard-disk, board, or other unit that can be identified by SCSI triple, the function may have unpredictable results.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitReady ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The unit is ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The specified unit does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The unit is not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Information and Status">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitStatus returns the current status of the drive specified with the parameter <I>pdwUnit</I>, indicating whether or not the drive&#39;s most recent operation completed successfully. The function&#39;s main purpose is to allow the host application to determine the status of individual units during multi-drive operations.<BR>
<BR>
If an error occured during the operation, the specified drive&#39;s most recent command code is output with <I>pdwCommand</I>, while the most recent Sense, ASC, and ASCQ codes (see <A HREF="PS_Guide_4.htm#Drive Error Codes"><SPAN CLASS="Arial_Inline"><B>Drive Error Codes</B></SPAN></A> in Chapter 4) are output with<I> pdwSense</I>, <I>pdwASC</I>, and <I>pdwASCQ</I>. If the operation completed successfully, the DWORDs pointed to by these parameters are left unchanged.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>To confirm the meaning of a drive&#39;s error codes, refer to its SCSI or ATAPI specifications.<BR>
<B>&#187; </B>Before checking an operation&#39;s result with this function, call <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A> to see whether or not the operation is still running.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitStatus ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PDWORD pdwCommand,<BR>
PDWORD pdwSense,<BR>
PDWORD pdwASC,<BR>
PDWORD pdwASCQ </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwCommand</P>
<P CLASS="Def_Field">A pointer to a DWORD to be filled in with the unit&#39;s most recent command code.</P>
<P CLASS="Code_Ital">pdwSense</P>
<P CLASS="Def_Field">A pointer to a DWORD to be filled in with the unit&#39;s most recent Sense code.</P>
<P CLASS="Code_Ital">pdwASC</P>
<P CLASS="Def_Field">A pointer to a DWORD to be filled in with the unit&#39;s most recent Additional Sense Code.</P>
<P CLASS="Code_Ital">pdwASCQ</P>
<P CLASS="Def_Field">A pointer to a DWORD to be filled in with the unit&#39;s most recent Additional Sense Code Qualifier.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The unit is not in error, meaning that the last operation completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_BUR</P>
<P CLASS="Def_Field">The unit went into buffer underrun (the call sets <I>pCommand</I>, <I>pSense</I>, <I>pASC</I> and <I>pASCQ</I>).</P>
<P CLASS="Code_Ital">PRIMOSDK_READERROR</P>
<P CLASS="Def_Field">The unit reported a reading error (the call sets <I>pCommand</I>, <I>pSense</I>, <I>pASC</I> and <I>pASCQ</I>).</P>
<P CLASS="Code_Ital">PRIMOSDK_WRITEERROR</P>
<P CLASS="Def_Field">The unit reported a recording error (the call sets <I>pCommand</I>, <I>pSense</I>, <I>pASC</I> and <I>pASCQ</I>).</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The unit reported an error of another type (the call sets <I>pCommand</I>, <I>pSense</I>, <I>pASC</I> and <I>pASCQ</I>).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_SCSIERROR</P>
<P CLASS="Def_Field">A communication error occurred.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="Drive Control">6.3 &nbsp;Drive Control</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_MoveMedium">PrimoSDK_MoveMedium</A>, <A HREF="#PrimoSDK_UnitVxBlock">PrimoSDK_UnitVxBlock</A>, <A HREF="#PrimoSDK_UnitAIN">PrimoSDK_UnitAIN</A>, <A HREF="#PrimoSDK_UnitLock">PrimoSDK_UnitLock</A>, <A HREF="#PrimoSDK_Command">PrimoSDK_Command</A></P>
<P CLASS="IndentSerif">These calls are used to control drive operations directly or to make settings that ensure successful recording by asserting PrimoSDK&#39;s control over the drive. </P>
<P CLASS="SubHead_Sans12"><A ID="Drive Control Sequence">Drive Control Sequence</A></P>
<P CLASS="IndentSerif">The following list illustrates the typical sequence and relevant parameter values for these functions when writing to disc or verifying a written disc:</P>
<OL CLASS="IndentSerif_NumList"><LI><A HREF="#PrimoSDK_UnitVxBlock">PrimoSDK_UnitVxBlock</A>(dwHandle, pdwUnit, PRIMOSDK_LOCK, szAppName);</LI>
<LI><A HREF="#PrimoSDK_UnitAIN">PrimoSDK_UnitAIN</A>(dwHandle, pdwUnit, PRIMOSDK_LOCK);</LI>
<LI><A HREF="#PrimoSDK_UnitLock">PrimoSDK_UnitLock</A>(dwHandle, pdwUnit, PRIMOSDK_LOCK);</LI>
<LI>Write to disc (see <A HREF="#PrimoSDK_CopyDisc">PrimoSDK_CopyDisc</A>, <A HREF="#PrimoSDK_WriteGI">PrimoSDK_WriteGI</A>, <A HREF="#PrimoSDK_WriteOtherCDImage">PrimoSDK_WriteOtherCDImage</A>, <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A>, <A HREF="#PrimoSDK_WriteAudio">PrimoSDK_WriteAudio</A>, <A HREF="#PrimoSDK_WriteAudioTrack">PrimoSDK_WriteAudioTrack</A>, or <A HREF="#PrimoSDK_WriteVideoCD">PrimoSDK_WriteVideoCD</A>) or verify a disc (see <A HREF="#PrimoSDK_VerifyDisc">PrimoSDK_VerifyDisc</A>);</LI>
<LI>PrimoSDK_UnitLock(dwHandle, pdwUnit, PRIMOSDK_UNLOCK);</LI>
<LI><A HREF="#PrimoSDK_MoveMedium">PrimoSDK_MoveMedium</A>(dwHandle, pdwUnit, PRIMOSDK_OPENTRAYEJECT);</LI>
<LI>PrimoSDK_UnitAIN(dwHandle, pdwUnit, PRIMOSDK_UNLOCK);</LI>
<LI>PrimoSDK_UnitVxBlock(dwHandle, pdwUnit, PRIMOSDK_UNLOCK, szAppName).</LI></OL>
<P CLASS="IndentSerif"><B>NOTE</B>: In the sequence shown above, the use of PrimoSDK_UnitVxBlock is required; if not used, it can cause problems in both the host application and other applications that might try to access the drive. PrimoSDK_UnitAIN and PrimoSDK_UnitLock are not required, but are recommended. Using them minimizes potential interruptions by end-users and the OS.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_MoveMedium">PrimoSDK_MoveMedium</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Control">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_MoveMedium controls the tray or caddy in the drive specified with the parameter <I>pdwUnit</I>. The drive&#39;s response to the call may be to open or close the tray, to eject the caddy, or to stop the drive, depending on the values passed in <I>dwFlags</I>:</P>
<TABLE ALIGN="center" WIDTH="95%" BORDER="1" CELLSPACING="0" CELLPADDING="5" CLASS="TableSans"><TBODY VALIGN="top">
<TR CLASS="TableSansHead"><TD><I>dwFlags</I></TD>
<TD>PRIMOSDK_IMMEDIATE<BR>
included</TD>
<TD>PRIMOSDK_IMMEDIATE<BR>
not included</TD></TR>
<TR><TD><B>PRIMOSDK_OPENTRAYEJECT</B></TD>
<TD>- call returns immediately;<BR>
- drive rotation stopped;<BR>
- tray opened or caddy ejected.</TD>
<TD>- drive rotation stopped;<BR>
- tray opened or caddy ejected.<BR>
- call returns.</TD></TR>
<TR><TD><B>PRIMOSDK_CLOSETRAY</B></TD>
<TD>- call returns immediately;<BR>
- tray closed.</TD>
<TD>- tray closed;<BR>
- call returns.</TD></TR>
<TR><TD><B>neither<BR>
PRIMOSDK_OPENTRAYEJECT<BR>
nor PRIMOSDK_CLOSETRAY</B></TD>
<TD>- call returns immediately;<BR>
- drive rotation stopped.</TD>
<TD>- drive rotation stopped;<BR>
- call returns.</TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif"><B>NOTES:<BR>
&#187; </B>If PrimoSDK_MoveMedium is called without including PRIMOSDK_IMMEDIATE in <I>dwFlags</I>, the function will not return until the tray movement has completed.<BR>
<B>&#187; </B>If the drive rotation is stopped by calling the function without either PRIMOSDK_OPENTRAYEJECT or PRIMOSDK_CLOSETRAY, calling the function again with PRIMOSDK_OPENTRAYEJECT will immediately open the tray or eject the caddy.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_MoveMedium ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwFlags </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD indicating the desired drive operation:<BR>
- PRIMOSDK_OPENTRAYEJECT to open&#47;eject the tray&#47;caddy;<BR>
- PRIMOSDK_CLOSETRAY to close the tray (has no effect if the drive uses a caddy);<BR>
- PRIMOSDK_IMMEDIATE have the call return without waiting for the specified operation to be completed.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The unit is not ready to move the tray.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitVxBlock">PrimoSDK_UnitVxBlock</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Control">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitVxBlock uses the <SPAN CLASS="Courier_New_Inline">VxBlock.dll </SPAN>mechanism to enquire if the drive specified with the parameter <I>pdwUnit</I> is currently in use, to reserve that drive, or to release it. The result of the function is determined by the operation to perform (specified with <I>dwFlags</I>) and whether the drive is already in use by another application:</P>
<TABLE ALIGN="center" WIDTH="95%" BORDER="1" CELLSPACING="0" CELLPADDING="5" CLASS="TableSans"><TBODY VALIGN="top">
<TR CLASS="TableSansHead"><TD><I>dwFlags</I></TD>
<TD>Drive not in use by another application...</TD>
<TD>Drive in use by another application...</TD></TR>
<TR><TD><B>PRIMOSDK_TEST</B></TD>
<TD>- call returns PRIMOSDK_OK.</TD>
<TD>- call returns PRIMOSDK_NOTREADY;<BR>
- a string provided by the using application is written to<I> szAppName</I>.</TD></TR>
<TR><TD><B>PRIMOSDK_LOCK</B></TD>
<TD>- call returns PRIMOSDK_OK;<BR>
- the drive is reserved for the calling application (all other applications will be blocked from using the drive);<BR>
- the string passed in with<I> szAppName</I> will be used to respond to any other applications that try to use the drive.</TD>
<TD>- call returns PRIMOSDK_NOTREADY;<BR>
- a string provided by the using application is written to<I> szAppName</I>.</TD></TR>
<TR><TD><B>PRIMOSDK_UNLOCK</B></TD>
<TD>- call returns PRIMOSDK_OK;<BR>
- the drive is released (applications other than the calling application will be able to use the drive).</TD>
<TD>- call returns PRIMOSDK_NOTREADY;<BR>
- a string provided by the using application is written to<I> szAppName</I>.</TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">VxBlock, a DLL that can be redistributed, is a mandatory component of PrimoSDK that helps achieve exclusive access to a device. VxBlock knows how to handle the most common applications that can bypass exclusive access mechanisms, such as DLA (drive letter access) type applications and mastering applications written either by Sonic or third parties. Using VxBlock, PrimoSDK can retrieve which application is currently using a device, and can also disable these applications from using a device that the client intends to use.<BR>
<BR>
PrimoSDK_UnitVxBlock is a required call, and is generally the first call in a typical pre-write or verify sequence (see <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above) and the last in a typical post-write or verify sequence.<BR>
<BR>
<B>NOTES:<BR>
&#187;</B> When using this call to release a drive (<I>dwFlags</I> = PRIMOSDK_UNLOCK), the string in <I>szAppName</I> must be exactly the same as that used when the drive was reserved (<I>dwFlags</I> = PRIMOSDK_LOCK). <BR>
<B>&#187;</B> When using this call to inquire about a drive (<I>dwFlags</I> = PRIMOSDK_TEST), the suggested size of <I>szAppName</I> is 256 bytes.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitVxBlock ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwFlags,<BR>
PBYTE szAppName </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD specifying the type of operation:<BR>
- PRIMOSDK_TEST to inquire about the VxBlock status of the drive;<BR>
- PRIMOSDK_LOCK to reserve the drive;<BR>
- PRIMOSDK_UNLOCK to release the drive.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="Code_Ital">szAppName</P>
<P CLASS="Def_Field">A pointer to a BYTE used for one of the following (to have PrimoSDK ignore this parameter, pass a NULL pointer):<BR>
- If dwFlags is PRIMOSDK_LOCK: to pass a string that will be used to respond to any other application that tries to use the drive;<BR>
- If the drive is already reserved by another application: to retrieve the string set by the application that reserved the drive.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The drive is not already reserved by another application.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_INCOMPATIBLE</P>
<P CLASS="Def_Field">The drive does not have a drive letter associated with it or VXBLOCK.DLL could not be loaded.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The drive specified with <I>pdwUnit</I> was already reserved by another application.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitAIN">PrimoSDK_UnitAIN</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Control">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitAIN blocks or unblocks Windows&#39; Auto Insert Notification (AIN) and file system activity for the drive specified with the parameter <I>pdwUnit</I>. When the activity is blocked on a drive, all operations other than those initiated by PrimoSDK are filtered out<BR>
(they return that the unit is not ready).<BR>
<BR>
When AIN is enabled, it can interfere with the disc recording process by automatically executing routines when it detects that a disc has been inserted into the drive. It is therefore mandatory that AIN &#151; as well as any other drive access not performed by PrimoSDK &#151; be blocked on recording drives.<BR>
<BR>
In a typical pre-write or verify sequence (see <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above), PrimoSDK_UnitAIN is called after <A HREF="#PrimoSDK_UnitVxBlock">PrimoSDK_UnitVxBlock</A> and before <A HREF="#PrimoSDK_UnitLock">PrimoSDK_UnitLock</A>; this order is reversed after the write or verify operation is completed.<BR>
<BR>
<B>NOTE:</B> The blocking is actuated by the <SPAN CLASS="Courier_New_Inline">PxHelper </SPAN>driver;<B> </B>an error will result when running under WinASPI.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitAIN ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwFlags </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_LOCK to disabled AIN and block file system activity or PRIMOSDK_UNLOCK to enable AIN and unblock file system activity;<BR>
- PRIMOSDK_FORCE_REFRESH to force the OS to refresh the media after the lock&#47;unlock.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOAINCONTROL</P>
<P CLASS="Def_Field">The AIN control did not activate, typically because PrimoSDK is running under WinASPI instead of PxHelper.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_UnitLock">PrimoSDK_UnitLock</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Control">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_UnitLock locks or unlocks the tray or the caddy on the drive specified with the parameter <I>pdwUnit</I>. The call is generally used to lock units before starting to record and to unlock them when the writing operations are finished (sucessfully or otherwise). <BR>
<BR>
In a typical pre-write or verify sequence (see <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above), PrimoSDK_UnitLock is called after <A HREF="#PrimoSDK_UnitAIN">PrimoSDK_UnitAIN</A>; this order is reversed after the write or verify operation is completed.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_UnitLock ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwFlags </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD specifying the desired tray&#47;caddy action:<BR>
- PRIMOSDK_LOCK to lock the tray&#47;caddy;<BR>
- PRIMOSDK_UNLOCK to unlock the tray&#47;caddy.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_Command">PrimoSDK_Command</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Drive Control">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_Command sends a bare SCSI command to the SCSI or ATAPI unit specified with <I>pdwUnit</I>. While the target unit could be a CD or DVD drive, this function is primarily provided to enable the sending of commands to SCSI robotics or other special devices using the PrimoSDK ASPI layer&#47;control (rather than having to install another layer in the system).<BR>
<BR>
When used to address a drive, <I>pdwUnit</I> is format as described in <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>. However, because robotics are not assigned a drive letter, they can only be addressed by SCSI Host&#47;ID&#47;LUN triple, and the least significant byte of the DWORD must be &quot;<SPAN CLASS="Courier_New_Inline">00</SPAN>&quot; (e.g. for the unit at Host 1, ID 3, Lun 0, <I>pdwUnit</I> points to &quot;<SPAN CLASS="Courier_New_Inline">0x01030000</SPAN>&quot;). This value does not change when the function returns.<BR>
<BR>
<B><FONT COLOR="ff0000">!</FONT></B> <B>NOTE</B>: Use this function with caution. The use of incorrect commands or target drives could have serious system-wide consequences.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_Command ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwCmdLen,<BR>
PBYTE pCmd,<BR>
DWORD dwDataLen,<BR>
PBYTE pData,<BR>
DWORD dwFlag,<BR>
DWORD dwTimeOut,<BR>
PDWORD pdwSense,<BR>
PDWORD pdwASC,<BR>
PDWORD pdwASCQ </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwCmdLen</P>
<P CLASS="Def_Field">A DWORD specifying the length of the SCSI command (usually from 6 to 12 bytes).</P>
<P CLASS="Code_Ital">pCmd</P>
<P CLASS="Def_Field">A pointer to the BYTE containing the actual SCSI command.</P>
<P CLASS="Code_Ital">dwDataLen</P>
<P CLASS="Def_Field">A DWORD specifying the length of the data buffer, if any.</P>
<P CLASS="Code_Ital">dwFlag</P>
<P CLASS="Def_Field">A DWORD giving one of the following values depending on whether or not data is transferred by the command:<BR>
- PRIMOSDK_DATAIN if data is transferred to the command from <I>pData</I>;<BR>
- PRIMOSDK_DATAOUT if data is transferred from the command to <I>pData</I>;<BR>
- PRIMOSDK_NODATA if no data is transferred.</P>
<P CLASS="Code_Ital">dwTimeOut</P>
<P CLASS="Def_Field">A DWORD specifying the command timeout in milliseconds.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see PrimoSDK_UnitInfo). </P>
<P CLASS="Code_Ital"><BR>
pData</P>
<P CLASS="Def_Field">A pointer to the BYTE from which or to which data is transferred by the command (use a NULL pointer if no data is transferred).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSense</P>
<P CLASS="Def_Field">A pointer to a DWORD to be filled in with the unit&#39;s most recent Sense code.</P>
<P CLASS="Code_Ital">pdwASC</P>
<P CLASS="Def_Field">A pointer to a DWORD to be filled in with the unit&#39;s most recent Additional Sense Code.</P>
<P CLASS="Code_Ital">pdwASCQ</P>
<P CLASS="Def_Field">A pointer to a DWORD to be filled in with the unit&#39;s most recent Additional Sense Code Qualifier.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The command completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_SCSIERROR</P>
<P CLASS="Def_Field">A communication error occurred or the command timed-out</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The command returned a check condition (<I>pSense</I>, <I>pASC</I>, and <I>pASCQ</I> will point to the corresponding error triple).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="Disc and Image Information">6.4 &nbsp;Disc and Image Information</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>, <A HREF="#PrimoSDK_DiscInfo">PrimoSDK_DiscInfo</A>, <A HREF="#PrimoSDK_DiscInfo2">PrimoSDK_DiscInfo2</A>, <A HREF="#PrimoSDK_GetDiscSpeedList">PrimoSDK_GetDiscSpeedList</A>, <A HREF="#PrimoSDK_GetDiscSpeed">PrimoSDK_GetDiscSpeed</A>, <A HREF="#PrimoSDK_GetDVDType">PrimoSDK_GetDVDType</A>, <A HREF="#PrimoSDK_GIInfoEx">PrimoSDK_GIInfoEx</A>, <A HREF="#PrimoSDK_GIInfo">PrimoSDK_GIInfo</A>, <A HREF="#PrimoSDK_TrackInfo">PrimoSDK_TrackInfo</A></P>
<P CLASS="IndentSerif">These calls are used to retrieve information about discs and global image files.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_DiscInfoEx retrieves information about the media inside the drive specified with the parameter <I>pdwUnit</I>, including the type and format of the media, its erasability, the number of tracks it contains, and the number of sectors used and available. Additional information not covered by this call may be retrieved with <A HREF="#PrimoSDK_DiscInfo2">PrimoSDK_DiscInfo2</A>.<BR>
<BR>
This function should be called before starting any recording operation to check the presence of blank discs in all the engaged recorders.<BR>
<BR>
<B>NOTES:<BR>
&#187;</B> This call is a fuller-featured replacement for PrimoSDK_DiscInfo, which is included in this version of PrimoSDK only to ensure backward compatibility.<BR>
<B>&#187;</B> For DVD+RW media in a DVD+RW drive, the value of <I>pdwMediumFormat</I> will be output as PRIMOSDK_F8.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_DiscInfoEx (</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwFlags,<BR>
PDWORD pdwMediumType,<BR>
PDWORD pdwMediumFormat,<BR>
PDWORD pdwErasable,<BR>
PDWORD pdwTracks,<BR>
PDWORD pdwUsed,<BR>
PDWORD pdwFree </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD specifying the drive mode for which to retrieve the number of free sectors available on the disc. If not given as &quot;0,&quot; sets the drive mode to incremental or TAO instead of DAO.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="Code_Ital">pdwMediumType</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the type of the medium (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- PRIMOSDK_SILVER if the disc is not recordable;<BR>
- PRIMOSDK_COMPLIANTGOLD if the disc is recordable by PrimoSDK;<BR>
- PRIMOSDK_OTHERGOLD if the disc is recordable but not usable by PrimoSDK (an unclosed disc of a different type);<BR>
- PRIMOSDK_BLANK if the disc is recordable and blank.</P>
<P CLASS="Code_Ital">pdwErasable</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in to indicate the media&#39;s erasability:<BR>
- if output as &quot;1,&quot; the media can be erased by the drive in which it resides;<BR>
- if output as &quot;0,&quot; the media cannot be erased.</P>
<P CLASS="Code_Ital">pdwMediumFormat</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the format of the media (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
PRIMOSDK_B1: Blank disc<BR>
PRIMOSDK_D1: Data Mode 1 DAO (e.g. most data CD-ROMs or  typical DOS games)<BR>
PRIMOSDK_D2: Kodak Photo CD - Data multisession Mode 2 TAO<BR>
PRIMOSDK_D3: Gold Data Mode 1 - Data multisession Mode 1, closed<BR>
PRIMOSDK_D4: Gold Data Mode 2 - Data multisession Mode 2, closed<BR>
PRIMOSDK_D5: Data Mode 2 DAO (silver mastered from Corel or Toast gold)<BR>
PRIMOSDK_D6: CDRFS - Fixed packet (from Sony packet-writing solution)<BR>
PRIMOSDK_D7: Packet writing<BR>
PRIMOSDK_D8: Gold Data Mode 1 - Data multisession Mode 1, open<BR>
PRIMOSDK_D9: Gold Data Mode 2 - Data multisession Mode 2, open<BR>
PRIMOSDK_A1: Audio DAO&#47;SAO&#47;TAO, like most silver music discs, or a Closed Gold audio<BR>
PRIMOSDK_A2: Audio Gold disc with session not closed (TAO or SAO)<BR>
PRIMOSDK_A3: First type of Enhanced CD (aborted)<BR>
PRIMOSDK_A4: CD Extra, Blue Book standard<BR>
PRIMOSDK_A5: Audio TAO with session not written (in-progress compilation)<BR>
PRIMOSDK_M1: First track data, others audio<BR>
PRIMOSDK_M2: Mixed-mode made TAO<BR>
PRIMOSDK_M3: Kodak Portfolio (as per the Kodak standard)<BR>
PRIMOSDK_M4: Video CD (as the White Book standard)<BR>
PRIMOSDK_M5: CD-i (as the Green Book standard)<BR>
PRIMOSDK_M6: PlayStation (Sony games)<BR>
PRIMOSDK_F1: Obsolete<BR>
PRIMOSDK_F2: Obsolete for restricted overwrite DVD (DLA DVD-RW)<BR>
PRIMOSDK_F3: Completed (non-appendable) DVD (DVD-ROM or closed recordable)<BR>
PRIMOSDK_F4: Incremental DVD with appendable zone (DLA DVD-R and DVD+RW)<BR>
PRIMOSDK_F5: Layer Jump DVD-R9 Disc<BR>
PRIMOSDK_F8: Recordable DVD-R, open<BR>
PRIMOSDK_FA: DVD-RAM cartridge<BR>
PRIMOSDK_GENERICCD: Other type of CD.</P>
<P CLASS="Code_Ital">pdwTracks</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the number of tracks in the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer). If the value at <I>pdwMediumType</I> is PRIMOSDK_BLANK, then the value at <I>pdwTracks</I> will be &quot;0.&quot;</P>
<P CLASS="Code_Ital">pdwUsed</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total number of sectors used on the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwFree</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total number of free sectors on the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer). If the value at <I>pdwMediumType</I> is PRIMOSDK_COMPLIANTGOLD, then one sector = 2048 bytes.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The unit reported a reading error.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_DiscInfo">PrimoSDK_DiscInfo</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSans"><B><FONT COLOR="ff0000">!</FONT> This call has been superceded by <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</B></A>, <B>and is included in PrimoSDK only to ensure backward compatibility.</B></P>
<P CLASS="IndentSerif">PrimoSDK_DiscInfo retrieves information about the media inside the drive specified with the parameter <I>pdwUnit</I>, including the type and format of the media, its erasability, the number of tracks it contains, and the number of sectors used and available. Additional information not covered by this call may be retrieved with <A HREF="#PrimoSDK_DiscInfo2">PrimoSDK_DiscInfo2</A>.<BR>
<BR>
This function should be called before starting any recording operation to check the presence of blank discs in all the engaged recorders.<BR>
<BR>
<B>NOTE</B>: For DVD+RW media in a DVD+RW drive, the value of <I>pdwMediumFormat</I> will be output as PRIMOSDK_F8.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_DiscInfo ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PDWORD pdwMediumType,<BR>
PDWORD pdwMediumFormat,<BR>
PDWORD pdwErasable,<BR>
PDWORD pdwTracks,<BR>
PDWORD pdwUsed,<BR>
PDWORD pdwFree </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwMediumType</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the type of the medium (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- PRIMOSDK_SILVER if the disc is not recordable;<BR>
- PRIMOSDK_COMPLIANTGOLD if the disc is recordable by PrimoSDK;<BR>
- PRIMOSDK_OTHERGOLD if the disc is recordable but not usable by PrimoSDK (an unclosed disc of a different type);<BR>
- PRIMOSDK_BLANK if the disc is recordable and blank.</P>
<P CLASS="Code_Ital">pdwErasable</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in to indicate the media&#39;s erasability:<BR>
- if output as &quot;1,&quot; the media can be erased by the drive in which it resides;<BR>
-  if output as &quot;0,&quot; the media cannot be erased.</P>
<P CLASS="Code_Ital">pdwMediumFormat</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the format of the media (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- PRIMOSDK_B1: Blank Disc<BR>
- PRIMOSDK_D1: Data Mode 1 DAO (like MSVC++ or a typical DOS game)<BR>
- PRIMOSDK_D2: Kodak Photo CD: Data multisession Mode 2 TAO<BR>
- PRIMOSDK_D3: Gold Data Mode 1: Data multisession Mode 1, closed<BR>
- PRIMOSDK_D4: Gold Data Mode 2: Data multisession Mode 2, closed<BR>
- PRIMOSDK_D5: Data Mode 2 DAO (silver mastered from Corel or Toast gold)<BR>
- PRIMOSDK_D6: CDRFS: Fixed packet (from Sony packet-writing solution)<BR>
- PRIMOSDK_D7: Packet writing<BR>
- PRIMOSDK_D8: Gold Data Mode 1: Data multisession Mode 1, open<BR>
- PRIMOSDK_D9: Gold Data Mode 2: Data multisession Mode 2, open<BR>
- PRIMOSDK_A1: Audio DAO Silver, like almost any music disc, or Closed Gold<BR>
- PRIMOSDK_A2: Audio Gold disc not closed (TAO or SAO)<BR>
- PRIMOSDK_A3: First type of Enhanced CD (aborted)<BR>
- PRIMOSDK_A4: CD Extra, Blue Book standard<BR>
- PRIMOSDK_A5: Audio TAO tracks with session not closed<BR>
- PRIMOSDK_M1: First track Data and other audio<BR>
- PRIMOSDK_M2: Gold TAO (like the ones made with Easy-CD 16 or 32 versions)<BR>
- PRIMOSDK_M3: Kodak Portfolio (as per the Kodak standard)<BR>
- PRIMOSDK_M4: Video CD (as per the White Book standard)<BR>
- PRIMOSDK_M5: CD-i (as per the Green Book standard)<BR>
- PRIMOSDK_M6: PlayStation (Sony games)<BR>
- PRIMOSDK_F1: DVD-ROM<BR>
- PRIMOSDK_F3: Recordable DVD-R, closed<BR>
- PRIMOSDK_F8: Recordable DVD-R, open<BR>
- PRIMOSDK_FA: DVD-RAM cartridge<BR>
- PRIMOSDK_GENERICCD: Other</P>
<P CLASS="Code_Ital">pdwTracks</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the number of tracks in the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer). If the value at <I>pdwMediumType</I> is PRIMOSDK_BLANK, then the value at <I>pdwTracks</I> will be &quot;0.&quot;</P>
<P CLASS="Code_Ital">pdwUsed</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total number of sectors used on the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwFree</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total number of free sectors on the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer). If the value at <I>pdwMediumType</I> is PRIMOSDK_COMPLIANTGOLD, then one sector = 2048 bytes.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The unit reported a reading error.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_DiscInfo2">PrimoSDK_DiscInfo2</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_DiscInfo2 retrieves additional information (not covered by <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>) about the media inside the drive specified with the parameter <I>pdwUnit</I>. This information may include the physical media type, as well as whether the disc has been formatted with packet-writing software and whether it is a DVD containing copy-protected content.<BR>
<BR>
<B>NOTES:<BR>
&#187;</B> If the disc is a Double Density CD, <I>pdwMedium</I> will output a pointer to the value PRIMOSDK_OTHER, while <I>pdwMediumEx</I> will output a pointer to either PRIMOSDK_DDCDROM, PRIMOSDK_DDCDR, or PRIMOSDK_DDCDRW. In all other circumstances the values pointed to by the two parameters will both have the same value.<BR>
<B>&#187;</B> If <I>pdwMedium</I> is passed a NULL pointer, then <I>pdwMediumEx</I> must also be passed a NULL pointer.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_DiscInfo2 ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PDWORD pdwMedium,<BR>
PDWORD pdwProtectedDVD,<BR>
PDWORD pdwFlags,<BR>
PDWORD pdwMediumEx,<BR>
PDWORD pdwRFU3 </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwMedium</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the physical type of the media (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- PRIMOSDK_CDROM for CD-ROM, including DDCD-ROM<BR>
- PRIMOSDK_CDR for CD-R, including DDCD-R<BR>
- PRIMOSDK_CDRW for CD-RW, including DDCD-RW<BR>
- PRIMOSDK_DVDR for DVD-R<BR>
- PRIMOSDK_DVDROM for DVD-ROM (any type)<BR>
- PRIMOSDK_DVDRAM for DVD-RAM<BR>
- PRIMOSDK_DVDRW for DVD-RW<BR>
- PRIMOSDK_DVDPRW for DVD+RW<BR>
- PRIMOSDK_DVDPR for DVD+R<BR>
- PRIMOSDK_DVDPR9 for dual-layer DVD+R<BR>
- PRIMOSDK_OTHER for other types</P>
<P CLASS="Code_Ital">pdwProtectedDVD</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in to indicate whether or not the media is a DVD containing copy-protected content (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- If output as &quot;1,&quot; the media is a DVD containing copy-protected content;<BR>
- If output as &quot;0,&quot; the media is not a DVD containing copy-protected content.</P>
<P CLASS="Code_Ital">pdwFlags</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the following flags (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- PRIMOSDK_PACKETWRITTEN if the media is formatted by packet writing software (currently applies only to DVD-RW).</P>
<P CLASS="Code_Ital">pdwMediumEx</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the physical type of the medium (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- PRIMOSDK_CDROM for CD-ROM<BR>
- PRIMOSDK_CDR for CD-R<BR>
- PRIMOSDK_CDRW for CD-RW<BR>
- PRIMOSDK_DVDR for DVD-R<BR>
- PRIMOSDK_DVDROM for DVD-ROM (any type)<BR>
- PRIMOSDK_DVDRAM for DVD-RAM<BR>
- PRIMOSDK_DVDRW for DVD-RW<BR>
- PRIMOSDK_DVDPRW for DVD+RW<BR>
- PRIMOSDK_DVDPR for DVD+R<BR>
- PRIMOSDK_DDCDROM for DDCD-ROM<BR>
- PRIMOSDK_DDCDR for DDCD-R<BR>
- PRIMOSDK_DDCDRW for DDCD-RW<BR>
- PRIMOSDK_DVDPR9 for dual-layer DVD+R<BR>
- PRIMOSDK_OTHER for other types</P>
<P CLASS="Code_Ital">pdwRFU3</P>
<P CLASS="Def_Field">Reserved for future use. </P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The unit reported a reading error.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_GetDiscSpeedList">PrimoSDK_GetDiscSpeedList</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_GetDiscSpeedList retrieves a list of the compatible record speeds supported by the disc in the drive specified with the parameter <I>pdwUnit</I>. The list is output with the DWORD vector <I>pdwSpeedList100thX</I>. The vector&#39;s size is allocated with <I>dwNumSpeeds</I>, while the actual number of speeds retrieved in the vector is output with <I>pdwNumSpeeds</I>.<BR>
<BR>
Speeds are expressed in hundredths of &quot;x.&quot; For example, a disc supporting nominal recording speeds of 1x, 2x, and 4x would result in output of the corresponding values 100, 200, and 400. <BR>
<BR>
<B>NOTES</B>:<BR>
<B>&#187;</B> The recommended value for <I>dwNumSpeeds</I> is 32.<BR>
<B>&#187;</B> The speeds actually reported by a drive may differ slightly from the disc&#39;s nominal speeds. The host application is responsible for rounding, if desired.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_GetDiscSpeedList (</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwNumSpeeds,<BR>
PDWORD pdwNumSpeeds,<BR>
PDWORD pdwSpeedList100thX</P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwNumSpeeds</P>
<P CLASS="Def_Field">A DWORD specifying the number of DWORDs allocated for <I>pdwSpeedList100thX</I> (recommended value = 32).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwNumSpeeds</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the actual number of speeds returned.</P>
<P CLASS="Code_Ital">pdwSpeedList100thX</P>
<P CLASS="Def_Field">A pointer to a DWORD vector that is to be filled in with the disc speeds.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The unit reported an error.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_GetDiscSpeed">PrimoSDK_GetDiscSpeed</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_GetDiscSpeed retrieves the actual speed at which the drive drive specified with the parameter <I>pdwUnit</I> will write in response to a given requested speed. Both speeds are given in hundredths of &#215; (the speed of a 1x drive is expressed as &quot;100&quot;). The requested speed is passed with <I>dwRequestedSpeed100thX</I>, while the actual speed is retrieved with <I>pdwGottenSpeed100thX</I>. If, for example, the caller specifies the requested speed as &quot;1200&quot; (12.00x) for a drive that writes at either 10.40x or 14.00x, <I>pdwGottenSpeed100thX</I> would be output as &quot;1040&quot; (10.40x).<BR>
<BR>
<B>NOTE</B>: This call does not actually initiate a write operation or set the write speed of the drive.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_GetDiscSpeed (</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwRequestedSpeed100thX,<BR>
pdwGottenSpeed100thX </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">pwRequestedSpeed100thX</P>
<P CLASS="Def_Field">The requested speed in 100ths of x.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwGottenSpeed100thX</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the actual speed (expressed in hundredths of x) at which the specified drive would write in response to the requested speed.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The unit reported an error.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_GetDVDType">PrimoSDK_GetDVDType</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_GetDVDType retrieves the type of DVD media inside the drive specified with the parameter <I>pdwUnit</I>, and outputs it with <I>pdwType</I>.<BR>
<BR>
<B>NOTE</B>: An error will result if the specified drive is locked via PrimoSDK_UnitAIN.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_GetDVDType (</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
LPDWORD pdwType,<BR>
LPDWORD pdwRFU </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwType</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the type of DVD media in the specified unit (if both DVD-Video and DVD-Audio apply, the retrieved values will be ORed together):<BR>
- PRIMOSDK_DVDUNKNOWN if the disc type is unknown or if the media is not a DVD;<BR>
- PRIMOSDK_DVDDATA if the disc is a DVD data disc (no DVD-Video or DVD-Audio content);<BR>
- PRIMOSDK_DVDAUDIO if the disc has a DVD-Audio zone (AUDIO_TS directory);<BR>
- PRIMOSDK_DVDVIDEO if the disc has a DVD-Video zone (VIDEO_TS directory);<BR>
- PRIMOSDK_DVDSTREAM if the disc is a DVD-SR (Stream Recording).</P>
<P CLASS="Code_Ital">pdwRFU</P>
<P CLASS="Def_Field">Reserved for future use.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_UNITERROR</P>
<P CLASS="Def_Field">The unit reported a reading error.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_GIInfoEx">PrimoSDK_GIInfoEx</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_GIInfoEx retrieves format, track, sector, and media type information about the Global Image file (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) specified with the parameter <I>szGIFileName</I>.<BR>
<BR>
<B>NOTES:<BR>
&#187;</B> This call is a fuller-featured replacement for PrimoSDK_GIInfo, which is included in this version of PrimoSDK only to ensure backward compatibility.<BR>
<B>&#187; </B>Before starting any recording operation, the caller should check the presence of blank discs in all engaged recorders.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_GIInfoEx ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szGIFileName,<BR>
PDWORD pdwMediumFormat,<BR>
PDWORD pdwTracks,<BR>
PDWORD pdwUsed,<BR>
PDWORD pdwMediaType,<BR>
PDWORD pdwMediaTypeEx </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szGIFileName</P>
<P CLASS="Def_Field">A pointer to a BYTE giving either the full path or the name of the Global Image file. If the full path is not specified, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwMediumFormat</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the image&#39;s format, expressed as one of the values listed under <I>pdwMediumFormat</I> in <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A> (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwTracks</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the number of tracks in the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwUsed</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total number of sectors used on the disc (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwMediaType</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with one of the following (to have PrimoSDK skip retrieval of this information, pass a NULL pointer):<BR>
- if the Global Image was created from a disc (see PrimoSDK_ReadGI), the media type (see PrimoSDK_DiscInfo) of the source disc;<BR>
- if the Global Image was created from a file set (see PrimoSDK_SaveGI), the media type specified for the image with the <I>dwFlags</I> parameter of <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>.</P>
<P CLASS="Code_Ital">pdwMediaTypeEx</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with one of the physical media type values listed for this parameter under <A HREF="#PrimoSDK_DiscInfo2">PrimoSDK_DiscInfo2</A> (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDSOURCE</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not a valid global image file.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_GIInfo">PrimoSDK_GIInfo</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSans"><B><FONT COLOR="ff0000">!</FONT> This call has been superceded by <A HREF="#PrimoSDK_GIInfoEx">PrimoSDK_GIInfoEx</B></A>, <B>and is included in PrimoSDK only to ensure backward compatibility.</B></P>
<P CLASS="IndentSerif">PrimoSDK_GIInfo retrieves format, track, and sector information about the Global Image file (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) specified with the parameter <I>szGIFileName</I>. </P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_GIInfo ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szGIFileName,<BR>
PDWORD pdwMediumFormat,<BR>
PDWORD pdwTracks,<BR>
PDWORD pdwUsed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szGIFileName</P>
<P CLASS="Def_Field">A pointer to a BYTE giving either the full path or the name of the Global Image file. If the full path is not specified, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwMediumFormat</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the image&#39;s format, expressed as one of the values listed under <I>pdwMediumFormat</I> in <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A> (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwTracks</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the number of tracks in the image (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="Code_Ital">pdwUsed</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total number of sectors used by the image (to have PrimoSDK skip retrieval of this information, pass a NULL pointer).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDSOURCE</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not a valid global image file.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_TrackInfo">PrimoSDK_TrackInfo</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Disc and Image Information">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_TrackInfo retrieves information about a specific track in a disc or global image whose information has been previously retrieved with a disc information (<A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>) or track information(<A HREF="#PrimoSDK_GIInfo">PrimoSDK_GIInfo</A>) operation. The parameter <I>dwHandle</I> is used to identify the operation, while <I>dwTrackNumber</I> is used to specify the track. The remaining parameters are used to output the track information, including the session number, track type, pre-gap, start position, and sector length.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_TrackInfo ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwTrackNumber,<BR>
PDWORD pdwSessionNumber,<BR>
PDWORD pdwTrackType,<BR>
PDWORD pdwPreGap,<BR>
PDWORD pdwStart,<BR>
PDWORD pdwLength </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>) used in the PrimoSDK_DiscInfoEx call or PrimoSDK_GIInfo call for the disc or image containing the track.</P>
<P CLASS="Code_Ital">dwTrackNumber</P>
<P CLASS="Def_Field">A DWORD specifying the number of the track (first track = &quot;1&quot;) about which to retrieve information.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSessionNumber</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the number of the session that contains the track.</P>
<P CLASS="Code_Ital">pdwTrackType</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the type of the track:<BR>
- if &quot;0,&quot; the type is Audio;<BR>
- if &quot;1,&quot; the type is Data Mode1;<BR>
- if &quot;2,&quot; the type is Data Mode2.</P>
<P CLASS="Code_Ital">pdwPreGap</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the number of sectors in the track&#39;s pre-gap.</P>
<P CLASS="Code_Ital">pdwStart</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the physical sector number at which the track begins.</P>
<P CLASS="Code_Ital">pdwLength</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total number of sectors in the track.&nbsp;&nbsp;</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized or PrimoSDK_DiscInfoEx&#47;PrimoSDK_GIInfo has not yet been called.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field"><I>dwTrackNumber</I> is incorrect.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="Reading and Extracting from Disc">6.5 &nbsp;Reading and Extracting from Disc</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_ReadGI">PrimoSDK_ReadGI</A>, <A HREF="#PrimoSDK_OpenReadDisc">PrimoSDK_OpenReadDisc</A>, <A HREF="#PrimoSDK_ReadDisc">PrimoSDK_ReadDisc</A>, <A HREF="#PrimoSDK_CloseReadDisc">PrimoSDK_CloseReadDisc</A>, <A HREF="#PrimoSDK_ExtractAudioTrack">PrimoSDK_ExtractAudioTrack</A>, <A HREF="#PrimoSDK_ExtractAudioToBuffer">PrimoSDK_ExtractAudioToBuffer</A>, <A HREF="#PrimoSDK_NextExtractAudioBuffer">PrimoSDK_NextExtractAudioBuffer</A>, <A HREF="#PrimoSDK_CDTextInfo">PrimoSDK_CDTextInfo</A>, <A HREF="#PrimoSDK_CDTextInfoEJ">PrimoSDK_CDTextInfoEJ</A></P>
<P CLASS="IndentSerif">These calls are used to obtain data, extract audio, or retrieve CD Text information from an existing disc.<BR>
<BR>
<B>NOTE</B>: Additional functionality for retrieving information related to tracks on Audio CDs is available via PrimoSDK&#39;s Advanced Audio calls (licensed separately from the standard version of PrimoSDK), which are documented in the <A HREF="PS_Guide_7.htm#Advanced Audio Addendum"><SPAN CLASS="Arial_Inline"><B>Advanced Audio Addendum</B></SPAN></A>.</P>
<P CLASS="SubHead_Sans12"><A ID="Disc Read Sequence">Disc Read Sequence</A></P>
<P CLASS="IndentSerif">The following is a typical workflow for reading data from specific sectors of a disc:</P>
<OL CLASS="IndentSerif_NumList"><LI>Open a read session with <A HREF="#PrimoSDK_OpenReadDisc">PrimoSDK_OpenReadDisc</A>;</LI>
<LI>Read data from specific sectors in a specified track to a buffer with <A HREF="#PrimoSDK_ReadDisc">PrimoSDK_ReadDisc</A>;</LI>
<LI>Close the read session with <A HREF="#PrimoSDK_CloseReadDisc">PrimoSDK_CloseReadDisc</A>.</LI></OL>
<P CLASS="IndentSerif">Alternatively, <A HREF="#PrimoSDK_ReadGI">PrimoSDK_ReadGI</A> may be used to simply copy an entire source disc to a Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file without first opening a read session and specifying the sectors to read.</P>
<P CLASS="SubHead_Sans12"><A ID="Audio Extraction Sequence">Audio Extraction Sequence</A></P>
<P CLASS="IndentSerif">The following is a typical workflow for extracting audio data from specific sectors on an Audio CD to a buffer:</P>
<OL CLASS="IndentSerif_NumList"><LI>Initialize the extraction operation, specifying the drive, sectors, and speed with <A HREF="#PrimoSDK_ExtractAudioToBuffer">PrimoSDK_ExtractAudioToBuffer</A>;</LI>
<LI>Pass a buffer to which extracted audio is to be read with <A HREF="#PrimoSDK_NextExtractAudioBuffer">PrimoSDK_NextExtractAudioBuffer</A> (call repeatedly as needed).</LI></OL>
<P CLASS="IndentSerif">Alternatively, <A HREF="#PrimoSDK_ExtractAudioTrack">PrimoSDK_ExtractAudioTrack</A> may be used to extract an entire audio track to a Wave (<SPAN CLASS="Courier_New_Inline">.WAV</SPAN>) file.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_ReadGI">PrimoSDK_ReadGI</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_ReadGI copies an entire source disc to a Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file. The source disc is specified with the parameter <I>pdwUnitSource</I>, and must contain a valid, unencrypted disc to copy (see <A HREF="#PrimoSDK_DiscInfo2">PrimoSDK_DiscInfo2</A>). The image may be copied with or without audio track pre-gaps, as specified with <I>dwFlags</I>. The full path or name of the destination file is specified with <I>szGIFileName</I>.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: If the file specified with <I>szGIFileName</I> already exists, it will be overwritten.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_ReadGI ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnitSource,<BR>
PBYTE szGIFileName,<BR>
DWORD dwFlags </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szGIFileName</P>
<P CLASS="Def_Field">A pointer to the BYTE specifying either the full path or the name of the newly-created Global Image file. If the full path is not specified, PrimoSDK will write the file in the current working directory.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD specifying whether or not to read the pre-gap of audio tracks:<BR>
- PRIMOSDK_COPYPREGAP to read the pre-gaps of audio tracks;<BR>
- PRIMOSDK_NOPREGAP to not read the pre-gaps.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnitSource</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the source drive by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal format of the DWORD).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or another operation is already in progress using the same handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The source drive is not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDSOURCE</P>
<P CLASS="Def_Field">The source drive does not contain a valid disc to read.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_OpenReadDisc">PrimoSDK_OpenReadDisc</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_OpenReadDisc opens a read session, preparing PrimoSDK to read sectors from a disc in the drive specified with the parameter <I>pdwUnit</I>. The track from which the sectors will be read is specified with <I>dwTrack</I>.<BR>
<BR>
The read operation itself is performed by <A HREF="#PrimoSDK_ReadDisc">PrimoSDK_ReadDisc</A>, after which the read session is closed with <A HREF="#PrimoSDK_CloseReadDisc">PrimoSDK_CloseReadDisc</A>. </P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_OpenReadDisc ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwTrack</P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwTrack</P>
<P CLASS="Def_Field">A DWORD specifying the number of the track from which sectors will be read.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The command completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters are incorrect (e.g. the track specified with <I>dwTrack</I> doesn&#39;t exist).</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_ReadDisc">PrimoSDK_ReadDisc</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_ReadDisc reads sectors from the track specified with the parameter <I>dwTrack</I> on a disc in the drive specified with <I>pdwUnit</I>. The starting sector is specified with <I>dwSector</I>, while the number of sectors to read is specified with <I>dwSectorCount</I>. The data is read to the buffer specified with <I>pBf</I>.<BR>
<BR>
Before PrimoSDK_ReadDisc can be used,<A HREF="# PrimoSDK_OpenReadDisc"> PrimoSDK_OpenReadDisc</A> must be called to open a read session; the parameters <I>pdwUnit</I> and <I>dwTrack </I>must be identical for both calls. <A HREF="#PrimoSDK_CloseReadDisc">PrimoSDK_CloseReadDisc</A> is called after the session is completed.<BR>
<BR>
<B>NOTE</B>: This call does not return until the data is read off the disc.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_ReadDisc (</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwTrack,<BR>
DWORD dwSector,<BR>
DWORD dwSectorCount,<BR>
PBYTE pBf</P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwTrack</P>
<P CLASS="Def_Field">A DWORD specifying the track number that will be read from (must be the same track as specified in <A HREF="#PrimoSDK_OpenReadDisc">PrimoSDK_OpenReadDisc</A> when the session was opened).</P>
<P CLASS="Code_Ital">dwSector</P>
<P CLASS="Def_Field">A DWORD specifying the sector index at which to start reading.</P>
<P CLASS="Code_Ital">dwSectorCount</P>
<P CLASS="Def_Field">A DWORD specifying the number of sectors to read.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>). The unit must be the same as that specified in PrimoSDK_OpenReadDisc when the session was opened.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pBf</P>
<P CLASS="Def_Field">A pointer to the BYTE that is the buffer for the read data.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The command completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters are incorrect (e.g. the track specified with <I>dwTrack</I> doesn&#39;t exist).</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_CloseReadDisc">PrimoSDK_CloseReadDisc</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_CloseReadDisc terminates a disc read session that was opened with <A HREF="#PrimoSDK_OpenReadDisc">PrimoSDK_OpenReadDisc</A> and frees the allocated structures. The parameters <I>pdwUnit</I> and <I>dwTrack</I> must be the same as in the PrimoSDK_OpenReadDisc call that opened the session. </P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_CloseReadDisc ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwTrack</P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwTrack</P>
<P CLASS="Def_Field">A DWORD specifying the track number that will be read from (must be the same track as specified in <A HREF="#PrimoSDK_OpenReadDisc">PrimoSDK_OpenReadDisc</A> when the session was opened).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>). The unit must be the same as that specified in PrimoSDK_OpenReadDisc when the session was opened.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The command completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters are incorrect (e.g. the track specified with <I>dwTrack</I> doesn&#39;t exist).</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_ExtractAudioTrack">PrimoSDK_ExtractAudioTrack</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_ExtractAudioTrack extracts a track from an audio disc in the drive specified with the parameter <I>pdwUnit</I>. The track to extract is specified with <I>dwNum</I>, while the Wave file (<SPAN CLASS="Courier_New_Inline">.WAV</SPAN>) to which the data will be written is specified with <I>szWaveFile</I>. The number of sectors in the track is output with <I>pdwSize</I>.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: If the operation is aborted, the portion of the file that is already written will not be deleted.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_ExtractAudioTrack ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwNum,<BR>
PBYTE szWaveFile,<BR>
PDWORD pdwSize </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwNum</P>
<P CLASS="Def_Field">A DWORD specifying the number of the track to extract (the first track is number 1).</P>
<P CLASS="Code_Ital">szWaveFile</P>
<P CLASS="Def_Field">A pointer to the BYTE specifying the full path or name of the Wave file to which the extracted audio data is to be written. Unless the full path is given, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSize</P>
<P CLASS="Def_Field">A pointer to a DWORD that will be filled in with the total number of sectors in the track.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The unit is not ready.
</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">The disk does not have enough free sectors.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_ExtractAudioToBuffer">PrimoSDK_ExtractAudioToBuffer</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_ExtractAudioToBuffer is used in conjunction with <A HREF="#PrimoSDK_NextExtractAudioBuffer">PrimoSDK_NextExtractAudioBuffer</A> to extract audio from an Audio CD to a buffer. PrimoSDK_ExtractAudioToBuffer initializes the extraction operation, using the parameter <I>pdwUnit</I> to specify the drive in which the CD resides. <I>dwStartSector</I> and <I>dwTotalSectors</I> identify the audio wanted from the CD, while the drive&#39;s speed during extraction is specified with <I>dwReadSpeed</I>.<BR>
<BR>
Once the extraction has been initialized, PrimoSDK_NextExtractAudioBuffer is called as needed to pass to the process one or more buffers that have been created for the extracted audio. <BR>
<BR>
This function returns immediately. To check on the progress of the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_ExtractAudioToBuffer (</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwStartSector,<BR>
DWORD dwTotalSectors,<BR>
DWORD dwReadSpeed,<BR>
DWORD dwReserved1,<BR>
DWORD dwReserved2,<BR>
DWORD dwReserved3</P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwStartSector</P>
<P CLASS="Def_Field">A DWORD specifying the first sector on the CD to read from.</P>
<P CLASS="Code_Ital">dwTotalSectors</P>
<P CLASS="Def_Field">A DWORD specifying the number of sectors to read.</P>
<P CLASS="Code_Ital">dwReadSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the read speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by the drive;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x).</P>
<P CLASS="Code_Ital">dwReserved1</P>
<P CLASS="Def_Field">Reserved for future use. Pass 0 for this parameter.</P>
<P CLASS="Code_Ital">dwReserved2</P>
<P CLASS="Def_Field">Reserved for future use. Pass 0 for this parameter.</P>
<P CLASS="Code_Ital">dwReserved3</P>
<P CLASS="Def_Field">Reserved for future use. Pass 0 for this parameter.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The command completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or the function was called out of order.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<P CLASS="Code_Ital">PRIMOSDK_USERABORT</P>
<P CLASS="Def_Field">The audio extraction was aborted.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_NextExtractAudioBuffer">PrimoSDK_NextExtractAudioBuffer</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_NextExtractAudioBuffer is used in conjunction with <A HREF="#PrimoSDK_ExtractAudioToBuffer">PrimoSDK_ExtractAudioToBuffer</A> to extract audio from an Audio CD to a buffer. PrimoSDK_ExtractAudioToBuffer initializes the extraction operation, after which PrimoSDK_NextExtractAudioBuffer is used to pass to the process buffers that have been created for the extracted audio.<BR>
<BR>
One buffer, specified with the parameter <I>pBuffer</I>, is passed each time the function is called. The size of that buffer is specified with <I>dwBufSize</I>.<BR>
<BR>
To allow efficient read streaming, the function may be called multiple times while waiting for buffers from previous calls to be filled. When the buffer specified with <I>pBuffer</I> is filled, the value of <I>curSector</I> as output by <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A> will exceed the value of <I>pTargetSector</I> as output by this function. </P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_NextExtractAudioBuffer (</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE pBuffer,<BR>
DWORD dwBufSize,<BR>
PDWORD pExpectedSize,<BR>
PDWORD pTargetSector </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">pBuffer</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the buffer into which data is to be read.</P>
<P CLASS="Code_Ital">dwBufSize</P>
<P CLASS="Def_Field">A DWORD specifying the size of <I>pBuffer</I>, which must be a multiple of 2352 (audio sector size).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pExpectedSize</P>
<P CLASS="Def_Field">A pointer to a DWORD that will be filled in with the amount of data expected in <I>pBuffer</I> when it is filled. This should equal <I>dwBufSize</I> except for the last read of the extraction, when the value may be anything between 0 and <I>dwBufSize</I>.</P>
<P CLASS="Code_Ital">pTargetSector</P>
<P CLASS="Def_Field">A pointer to a DWORD that will be filled in with the number of the last sector that will be read into the buffer specified with <I>pBuffer</I>.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The command completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized. or called out of order</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid. (example: Buffer size not multiple of 2352)</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<P CLASS="Code_Ital">PRIMOSDK_USERABORT</P>
<P CLASS="Def_Field">The audio extraction was aborted.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_CDTextInfo">PrimoSDK_CDTextInfo</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_CDTextInfo, used after having called <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A> or <A HREF="#PrimoSDK_GIInfo">PrimoSDK_GIInfo</A>, retrieves English CD Text information for the entire disc in the drive specified with the parameter <I>pdwUnit</I>. The information is output with the parameters <I>szTitle</I>, <I>szPerformer</I>, and <I>szComposer</I>. If these three objects are empty after calling the function, the disc does not have CD Text.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>The recommended size for the buffers pointed to by <I>szTitle</I>, <I>szPerformer</I>, and <I>szComposer</I> is 2000 bytes each.<BR>
<B>&#187; </B>To retrieve both English and Japanese CD Text, use <A HREF="#PrimoSDK_CDTextInfoEJ">PrimoSDK_CDTextInfoEJ</A>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_CDTextInfo ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PBYTE szTitle,<BR>
PBYTE szPerformer,<BR>
PBYTE szComposer </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must be the same as that used when calling PrimoSDK_DiscInfoEx or PrimoSDK_GIInfo.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">szTitle</P>
<P CLASS="Def_Field">A pointer to a BYTE that will be filled in with a multiline string, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the title for the disc, the second line is the title of the first track, the third line is the title of the second track, etc.</P>
<P CLASS="Code_Ital">szPerformer</P>
<P CLASS="Def_Field">A pointer to a BYTE that will be filled in with a multiline string, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the performer for the disc, the second line is the performer of the first track, the third line is the performer of the second track, etc.</P>
<P CLASS="Code_Ital">szComposer</P>
<P CLASS="Def_Field">A pointer to a BYTE that will be filled in with a multiline string, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the composer for the disc, the second line is the composer of the first track, the third line is the composer of the second track, etc.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or no Audio CD is started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The specified drive does not support CD Text.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_CDTextInfoEJ">PrimoSDK_CDTextInfoEJ</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Reading and Extracting from Disc">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_CDTextInfoEJ, used after having called <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A> or <A HREF="#PrimoSDK_GIInfo">PrimoSDK_GIInfo</A>, retrieves English and Japanese CD Text information for the entire disc in the drive specified with the parameter <I>pdwUnit</I>.<BR>
<BR>
The English information is output with the parameters <I>szTitleE</I>, <I>szPerformerE</I>, and <I>szComposerE</I>, while the Japanese CD Text is output in Shift JIS (double-byte) with <I>szTitleJ</I>, <I>szPerformerJ</I>, and <I>szComposerJ</I>. If either the English set or the Japanese set of parameters are empty after calling the function, then the disc does not contain CD Text in the corresponding language.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>The recommended size for the buffers pointed to by <I>szTitleE</I>, <I>szPerformerE</I>, <I>szComposerE</I>,<I> szTitleJ</I>, <I>szPerformerJ</I>, and <I>szComposerJ</I> is 2000 bytes each.<BR>
<B>&#187; </B>To retrieve English CD Text only, use <A HREF="#PrimoSDK_CDTextInfo">PrimoSDK_CDTextInfo</A>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_CDTextInfoEJ ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
PBYTE szTitleE,<BR>
PBYTE szPerformerE,<BR>
PBYTE szComposerE,<BR>
PBYTE szTitleJ,<BR>
PBYTE szPerformerJ,<BR>
PBYTE szComposerJ </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must be the same as that used when calling PrimoSDK_DiscInfoEx or the PrimoSDK_GIInfo.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">szTitleE</P>
<P CLASS="Def_Field">A pointer to a BYTE that will be filled in with a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the title for the disc, the second line is the title of the first track, the third line is the title of the second track, etc.</P>
<P CLASS="Code_Ital">szPerformerE</P>
<P CLASS="Def_Field">A pointer to a BYTE that will be filled in with a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the performer for the disc, the second line is the performer of the first track, the third line is the performer of the second track, etc.</P>
<P CLASS="Code_Ital">szComposerE</P>
<P CLASS="Def_Field">A pointer to a BYTE that will be filled in with a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the composer for the disc, the second line is the composer of the first track, the third line is the composer of the second track, etc.</P>
<P CLASS="Code_Ital">szTitleJ</P>
<P CLASS="Def_Field">Same as <I>szTitleE</I>, but in Japanese.</P>
<P CLASS="Code_Ital">szPerformerJ</P>
<P CLASS="Def_Field">Same as <I>szPerformerE</I>, but in Japanese.</P>
<P CLASS="Code_Ital">szComposerJ</P>
<P CLASS="Def_Field">Same as <I>szComposerE</I>, but in Japanese.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or no Audio CD is started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The specified drive does not support CD Text.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="General Disc Write and Verify">6.6 &nbsp;General Disc Write and Verify</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_EraseMedium">PrimoSDK_EraseMedium</A>, <A HREF="#PrimoSDK_CopyDisc">PrimoSDK_CopyDisc</A>, <A HREF="#PrimoSDK_VerifyDisc">PrimoSDK_VerifyDisc</A>, <A HREF="#PrimoSDK_WriteGI">PrimoSDK_WriteGI</A>, <A HREF="#PrimoSDK_VerifyGI">PrimoSDK_VerifyGI</A>, <A HREF="#PrimoSDK_WriteOtherCDImage">PrimoSDK_WriteOtherCDImage</A>, <A HREF="#PrimoSDK_VerifyOtherCDImage">PrimoSDK_VerifyOtherCDImage</A></P>
<P CLASS="IndentSerif">These calls are used for disc recording and verifying operations that are not specific to particular disc types. For calls related to image creation, writing, and verification for specific disc types, see the <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A>, <A HREF="#Audio CD Images"><SPAN CLASS="Arial_Inline"><B>Audio CD Images</B></SPAN></A>, and <A HREF="#Video CD Images"><SPAN CLASS="Arial_Inline"><B>Video CD Images</B></SPAN></A> sections below.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_EraseMedium">PrimoSDK_EraseMedium</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#General Disc Write and Verify">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_EraseMedium erases a rewritable disc in the drive specified with the parameter <I>pdwUnit</I>. The type of erase operation to perform is specified with <I>dwFlags</I>.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_EraseMedium ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnit,<BR>
DWORD dwFlags </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD specifying the type of erase operation to perform:<BR>
- PRIMOSDK_ERASEQUICK for a fast erase (TOC only);<BR>
- PRIMOSDK_ERASEFULL for a complete erase;<BR>
- PRIMOSDK_ERASELAST to erase the last session (if applicable).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnit</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the unit by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (for the internal format of the DWORD, see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A>).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_CopyDisc">PrimoSDK_CopyDisc</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#General Disc Write and Verify">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_CopyDisc copies an entire source disc to one or more recording drives. The source disc is specified with the parameter <I>pdwUnitSource</I>, and must contain a valid, unencrypted disc to copy (see <A HREF="#PrimoSDK_DiscInfo2">PrimoSDK_DiscInfo2</A>). Options for the operation are specified with <I>dwFlags</I>.<BR>
<BR>
The destination record drives are specified with a DWORD vector pointed to by<I> pdwUnits</I>. Each recorder must already contain a blank recordable&#47;rewritable disc (see <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>) with sufficient free sectors to accommodate the total used sectors of the source disc. If the number of sectors to be copied exceeds the sectors reported by PrimoSDK_DiscInfoEx as being available on the destination disc, PrimoSDK will attempt to continue writing. The write operation will fail unless there is additional unreported space on the media.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>This call is used as part of the recommended write operation sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.<B><BR>
&#187; </B>If the source disc is &quot;open&quot; (not yet finalized), this function will normally make the destination disc open, as well. However, if <I>dwFlags</I> includes PRIMOSDK_CLOSEDISC, the destination disc will &quot;closed,&quot; preventing the subsequent appending of additional sessions.<BR>
<B>&#187;</B> If <I>dwSpeed</I> specifies a speed that is not supported by the destination drive, the drive will be set to record at the closest slower speed.<BR>
<B>&#187;</B> The DVD+R, DVD+RW, and DVD+RAM formats do not support a &quot;test write&quot; mode. If a test write is attempted to a destination disc in one of those formats, this function will return PRIMOSDK_BADPARAM.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_CopyDisc ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PDWORD pdwUnitSource,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_WRITE to make a real recording, or PRIMOSDK_TEST to run a test;<BR>
- PRIMOSDK_COPYPREGAP to copy the Pre-gaps of audio tracks, or PRIMOSDK_NOPREGAP to not copy the Pre-gaps<BR>
- PRIMOSDK_BURNPROOF to enable BURN-Proof (buffer underrun protection) if available on the destination drive;<BR>
- PRIMOSDK_VNR_WRITE to enable Verify-Not-Required functionality on BD-R media;<BR>
- PRIMOSDK_CLOSEDISC if the disc is to be closed so that no other session can be added.</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by both the destination drive and destination media;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x);<BR>
- PRIMOSDK_BEST for drives that support Adjustable Write Speed. If the drive does not support AWS, the speed will revert to PRIMOSDK_MAX.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying the destination drives by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format).</P>
<P CLASS="Code_Ital">pdwUnitSource</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the source drive by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (see PrimoSDK_UnitInfo for the internal format of the DWORD).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized or another operation is already in progress using the same handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">A unit specified with either <I>pdwUnitSource</I> or <I>pdwUnits</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">A drive (source or destination) is not ready</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDSOURCE</P>
<P CLASS="Def_Field">The source drive does not contain a valid disc to copy.</P>
<P CLASS="Code_Ital">PRIMOSDK_INCOMPATIBLE</P>
<P CLASS="Def_Field">The destination drive contains a type of disc that is not compatible with the capabilities of the recorder.</P>
<P CLASS="Code_Ital">PRIMOSDK_ITSADEMO</P>
<P CLASS="Def_Field">The operation exceeds the limits allowed by the Demo version of PrimoSDK.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_VerifyDisc">PrimoSDK_VerifyDisc</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#General Disc Write and Verify">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_VerifyDisc verifies one or more written discs against the source disc specified with the parameter <I>pdwUnitSource</I>. The drives containing the discs to be verified are specified with a DWORD vector pointed to by<I> pdwUnits</I>, while the verification speed is set with <I>dwSpeed</I>.<BR>
<BR>
During verification, disc geometry is verified first, followed with byte-by-byte verification of every track. For audio tracks, where absolute verification is not supported by the error correction algorithms of the Red Book standard, a special proprietary algorithm is applied.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: <BR>
<B>&#187; </B>This call is used as part of the recommended disc verify sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.<B><BR>
&#187; </B>To check on the result of an individual verification, use <A HREF="#PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A>, which returns PRIMOSDK_UNITERROR if a disc fails the verification (in which case the parameters <I>pCommand</I>, <I>pSense</I>, <I>pASC</I>, and <I>pASCQ</I> will all be set to &quot;0&quot;).</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_VerifyDisc ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PDWORD pdwUnitSource,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by the drive;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple the drives containing the discs to be verified (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format).</P>
<P CLASS="Code_Ital">pdwUnitSource</P>
<P CLASS="Def_Field">A pointer to a DWORD identifying the source drive by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (see PrimoSDK_UnitInfo for the internal format of the DWORD).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized. or another operation is already in progress using the same handle</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">Either the source unit specified with <I>pdwUnitSource</I> or a destination unit specified with <I>pdwUnits</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The source drive is not ready, or a drive specified with <I>pdwUnits</I> is either not ready or contains a blank.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDSOURCE</P>
<P CLASS="Def_Field">The source drive does not contain a valid disc to verify.
</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_WriteGI">PrimoSDK_WriteGI</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#General Disc Write and Verify">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_WriteGI writes (either actually or in &quot;test write&quot; mode) to one or more record drives from the Global Image file specified with the parameter <I>szGIFileName.</I> (To write images that are not in a Global Image file, see <A HREF="#PrimoSDK_WriteOtherCDImage">PrimoSDK_WriteOtherCDImage</A>.) The destination drives are specified with a DWORD vector pointed to by<I> pdwUnits</I>. Each recorder must already contain a blank recordable&#47;rewritable disc (see <I>pdwMediumType</I> under <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>).<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>This call is used as part of the recommended write operation sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.<BR>
<B>&#187;</B> The DVD+R, DVD+RW, and DVD+RAM formats do not support a &quot;test write&quot; mode. If a test write is attempted to a destination disc in one of those formats, this function will return PRIMOSDK_BADPARAM.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_WriteGI ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PBYTE szGIFileName,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szGIFileName</P>
<P CLASS="Def_Field">A pointer to the BYTE specifying the name or full path of the source Global Image file. Unless the full path is given, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_WRITE to make a real recording, or PRIMOSDK_TEST to run a test;<BR>
- PRIMOSDK_VNR_WRITE to enable Verify-Not-Required functionality on BD-R media;<BR>
- PRIMOSDK_BURNPROOF to enable BURN-Proof (buffer underrun protection) if available on the destination drive;<BR>
</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by both the destination drive and destination media;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x);<BR>
- PRIMOSDK_BEST for drives that support Adjustable Write Speed. If the drive does not support AWS, the speed will revert to PRIMOSDK_MAX.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying the destination drives by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or another operation is already in progress using the same handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The recorder is not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> was not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDSOURCE</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not a valid Global Image.
</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDMEDIUM</P>
<P CLASS="Def_Field">The target disc is not blank.
</P>
<P CLASS="Code_Ital">PRIMOSDK_INCOMPATIBLE</P>
<P CLASS="Def_Field">The specified Global Image is from a type of disc that is not compatible with the capabilities of the recorder.</P>
<P CLASS="Code_Ital">PRIMOSDK_ITSADEMO</P>
<P CLASS="Def_Field">The operation exceeds the limits allowed by the Demo version of PrimoSDK.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_VerifyGI">PrimoSDK_VerifyGI</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#General Disc Write and Verify">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_VerifyGI verifies one or more written discs against the Global Image file (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) specified with the parameter <I>szGIFileName</I>. The drives containing the discs to be verified are specified with a DWORD vector pointed to by<I> pdwUnits</I>, while the verification speed is set with <I>dwSpeed</I>.<BR>
<BR>
During verification, disc geometry is verified first, followed with byte-by-byte verification of every track. For audio tracks, where absolute verification is not supported by the error correction algorithms of the Red Book standard, a special proprietary algorithm is applied.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: To check on the result of an individual verification, use <A HREF="#PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A>, which returns PRIMOSDK_UNITERROR if a disc fails the verification (in which case the parameters <I>pCommand</I>, <I>pSense</I>, <I>pASC</I>, and <I>pASCQ</I> will all be set to &quot;0&quot;).</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_VerifyGI ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PBYTE szGIFileName,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szGIFileName</P>
<P CLASS="Def_Field">A pointer to the BYTE specifying the name or full path of the source Global Image file. Unless the full path is given, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the verification speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by the drive;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple the drives containing the discs to be verified (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or another operation is already in progress using the same handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters are incorrect; the destination media may not be compatible with the Global Image.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDSOURCE</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not a valid Global Image.
</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">A drive specified with <I>pdwUnits</I> is either not ready or contains a blank.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_WriteOtherCDImage">PrimoSDK_WriteOtherCDImage</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#General Disc Write and Verify">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_WriteOtherCDImage writes (either actually or in &quot;test write&quot; mode) to one or more record drives from a generic ISO CD image that was created with <A HREF="#PrimoSDK_SaveImage">PrimoSDK_SaveImage</A><I>.</I> (To write images that are in a Global Image file, see <A HREF="#PrimoSDK_WriteGI">PrimoSDK_WriteGI</A>.) The source image is specified with the parameter <I>szFileName</I>, while the destination drives are specified with a DWORD vector pointed to by<I> pdwUnits</I>.<BR>
<BR>
Unless PRIMOSDK_TAO is included in the flags specified with <I>dwFlags</I>, each recorder must already contain a blank recordable&#47;rewritable disc (see <I>pdwMediumType</I> under <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>). If PRIMOSDK_TAO is specified, then the target of the record operation need not be blank as long as the disc is open (not finalized), in which case the contents of the source file will be recorded as a new track.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTES:<BR>
&#187;</B> This call is used as part of the recommended write operation sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.<BR>
<B>&#187;</B> The value in <I>dwFlags</I> must be set to match the sector size of the source image file. The most common image file is CD or DVD data at 2048 bytes per sector, which would use the value PRIMOSDK_IMAGE_M1_2048.<BR>
<B>&#187;</B> To append additional ISO tracks to a disc that is not blank but is open, include the PRIMOSDK_TAO flag in <I>dwFlags</I>.<BR>
<B>&#187;</B> The DVD+R, DVD+RW, and DVD+RAM formats do not support a &quot;test write&quot; mode. If a test write is attempted to a destination disc in one of those formats, this function will return PRIMOSDK_BADPARAM.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_WriteOtherCDImage ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PBYTE szFileName,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szFileName</P>
<P CLASS="Def_Field">A pointer to the BYTE specifying the full path or the name of the source image file. If the full path is not specified, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_WRITE to make a real recording, or PRIMOSDK_TEST to run a test;<BR>
- PRIMOSDK_BURNPROOF to enable BURN-Proof (buffer underrun protection) if available on the destination drive;<BR>
- PRIMOSDK_TAO to append additional ISO tracks to a disc that is not blank but is open;<BR>
- PRIMOSDK_VNR_WRITE to enable Verify-Not-Required functionality on BD-R media;<BR>
- PRIMOSDK_CLOSEDISC to close the disc so that sessions cannot be added later;<BR>
- PRIMOSDK_IMAGE_M1_2048 to record an image in Mode 1 with a block length of 2048 bytes, PRIMOSDK_IMAGE_M2_2336 to record an image in Mode 2 with a block length of 2336 bytes, or PRIMOSDK_IMAGE_M2_2352 to record an image in Mode 2 with a block length of 2352 bytes.</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by both the destination drive and destination media;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x);<BR>
- PRIMOSDK_BEST for drives that support Adjustable Write Speed. If the drive does not support AWS, the speed will revert to PRIMOSDK_MAX.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying the destination drives by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or another operation is already in progress using the same handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The recorder is not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDMEDIUM</P>
<P CLASS="Def_Field">The target disc is not blank.
</P>
<P CLASS="Code_Ital">PRIMOSDK_ITSADEMO</P>
<P CLASS="Def_Field">The operation exceeds the limits allowed by the Demo version of PrimoSDK.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_VerifyOtherCDImage">PrimoSDK_VerifyOtherCDImage</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#General Disc Write and Verify">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_VerifyOtherCDImage verifies one or more written discs against the generic CD image specified with the parameter <I>szFileName</I>. The drives containing the discs to be verified are specified with a DWORD vector pointed to by<I> pdwUnits</I>, while the verification speed is set with <I>dwSpeed</I>. <BR>
<BR>
During verification, disc geometry is verified first, followed with byte-by-byte verification of every track. For audio tracks, where absolute verification is not supported by the error correction algorithms of the Red Book standard, a special proprietary algorithm is applied.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: To check on the result of an individual verification, use <A HREF="#PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A>, which returns PRIMOSDK_UNITERROR if a disc fails the verification (in which case the parameters <I>pCommand</I>, <I>pSense</I>, <I>pASC</I>, and <I>pASCQ</I> will all be set to &quot;0&quot;).</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_VerifyOtherCDImage ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PBYTE szFileName,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szFileName</P>
<P CLASS="Def_Field">A pointer to the BYTE specifying the name or full path of the source image file. Unless the full path is given, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD specifying the mode and block length of the source image:<BR>
- PRIMOSDK_IMAGE_M1_2048 to verify an image in Mode 1 with a block length of 2048 bytes;<BR>
- PRIMOSDK_IMAGE_M2_2336 to verify an image in Mode 2 with a block length of 2336 bytes;<BR>
- PRIMOSDK_IMAGE_M2_2352 to verify an image in Mode 2 with a block length of 2352 bytes.</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the verification speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by the drive;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple the drives containing the discs to be verified (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or another operation is already in progress using the same handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">A drive specified with <I>pdwUnits</I> is either not ready or contains a blank.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szGIFileName</I> is not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="Data CD and DVD Images">6.7 &nbsp;Data CD and DVD Images</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A>, <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>, <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A>, <A HREF="#PrimoSDK_AddBootable">PrimoSDK_AddBootable</A>, <A HREF="#PrimoSDK_GetSpaceUsed">PrimoSDK_GetSpaceUsed</A>, <A HREF="#PrimoSDK_SaveGI">PrimoSDK_SaveGI</A>, <A HREF="#PrimoSDK_SaveImage">PrimoSDK_SaveImage</A>, <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A>, <A HREF="#PrimoSDK_VerifyImage">PrimoSDK_VerifyImage</A>, <A HREF="#PrimoSDK_CloseImage">PrimoSDK_CloseImage</A></P>
<P CLASS="IndentSerif">These calls are used to create, save, write, and verify disc images for Data CDs and for DVDs.<BR>
<BR>
<B>NOTE</B>: Additional functionality for data discs, including streaming-related file system capabilities, is available via PrimoSDK Realtime, a set of optional StreamFS functions (documented in the <A HREF="PS_Guide_8.htm#StreamFS Addendum"><SPAN CLASS="Arial_Inline"><B>StreamFS Addendum</B></SPAN></A>).</P>
<P CLASS="SubHead_Sans12"><A ID="Data Disc Workflow">Data Disc Workflow</A></P>
<P CLASS="IndentSerif">The following is a typical workflow for building a data disc structure and writing it to disc:</P>
<OL CLASS="IndentSerif_NumList"><LI>Start a new data disc structure with <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> (for ASCII) or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A> (for Unicode);</LI>
<LI>Add directories and files to the structure with <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A> (ASCII), <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A> (Unicode), <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A> (ASCII), and&#47;or <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A> (Unicode);</LI>
<LI>Save the structure as a Global Image with <A HREF="#PrimoSDK_SaveGI">PrimoSDK_SaveGI</A>, or as a generic image with <A HREF="#PrimoSDK_SaveImage">PrimoSDK_SaveImage</A>;</LI>
<LI>Record (or test) the image with <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A>;</LI>
<LI>Verify the recording with <A HREF="#PrimoSDK_VerifyImage">PrimoSDK_VerifyImage</A>;</LI>
<LI>Call <A HREF="#PrimoSDK_CloseImage">PrimoSDK_CloseImage</A> to terminate and clean up the structure.</LI></OL>
<P CLASS="SubHead_Sans12"><A ID="Adding Directories">Adding Directories</A></P>
<P CLASS="IndentSerif">Because PrimoSDK_AddFolder, PrimoSDK_AddFolderWCS, PrimoSDK_AddFile, and PrimoSDK_AddFileWCS add elements one-at-a-time, the addition of an entire folder of subfolders and files requires the coding of a function that &quot;walks&quot; all the subfolders (&quot;traverses&quot; a directory). This function needs to be a clean recursive procedure to avoid stack overflow when adding deep directory structures.<BR>
<BR>
The PrimoSDK toolkit includes code that has already been written and tested for traversing a directory. This code is present in both of the sample applications provided with PrimoSDK: Sample_C for C&#47;C++ and Sample_VB for Visual Basic. Licensed users of PrimoSDK are free to copy this sample code.<BR>
<BR>
<B>NOTE</B>: For example code illustrating the basic creation and writing of a simple data disc, see <A HREF="PS_Guide_3.htm#Data CD Example Code"><SPAN CLASS="Arial_Inline"><B>Data CD Example Code</B></SPAN></A> in Chapter 3.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_NewImage">PrimoSDK_NewImage</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_NewImage initiates the building of a file structure for a Data CD or a DVD. This call is essentially the same as <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>, except that the volume name is given as an ASCII string rather than a Unicode string.<BR>
<BR>
The file structure is built in the file system specified with the parameter <I>dwFlags</I>. As outlined in <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A> above, the structure is subsequently populated with files and folders, at which point it may be written to a disc in the drive specified with <I>pdwUnits</I> or saved as a generic image or Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file.<BR>
<BR>
If written to disc, the file structure may either be written as a new image or appended to an existing image (assuming this is supported by the media type of the specified disc). The parameter <I>dwTrackToLoad</I> gives some control over how this will happen by indicating the session (for CD) or border (for DVD) from which the existing file system structure is to be read when appending. This allows the overwriting of sessions&#47;borders that are contiguous to the end of the disc&#39;s existing content. The highest valid value for <I>dwTrackToLoad</I> equals the value of <I>pdwTracks</I> as output by <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>.<BR>
<BR>
The following table shows the value to use for <I>dwTrackToLoad</I> depending on the desired outcome and the format of the disc in the drive (see values for <I>pdwMediumFormat</I> in <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>):</P>
<TABLE ALIGN="center" WIDTH="95%" BORDER="1" CELLSPACING="0" CELLPADDING="5" CLASS="TableSans"><TBODY VALIGN="top">
<TR CLASS="TableSansHead"><TD><I>dwTrackToLoad</I></TD>
<TD>Single-border media:<BR>
DVD-RAM, DVD+RW, and DVD-RW restricted overwrite</TD>
<TD>Multi-session&#47;border media:<BR>
all other media types, including DVD-RW incremental sequential</TD></TR>
<TR><TD><B>0</B></TD>
<TD>- Create a fresh volume.<BR>
- The disc&#39;s existing data (if any) is overwritten.</TD>
<TD>- Create a fresh volume<BR>
- The disc&#39;s existing data (if any) is overwritten.</TD></TR>
<TR><TD><B>1</B></TD>
<TD>- Append the data structure to the volume&#39;s existing data (all data is in border 1).<BR>
- Existing file system must be UDF.</TD>
<TD>- Append the data structure in a new session&#47;border following session&#47;border 1.<BR>
- Any existing sessions&#47;borders 2 or higher will be overwritten.</TD></TR>
<TR><TD><B>2, 3, etc.</B></TD>
<TD>Not used.</TD>
<TD>- Append the data structure in a new session&#47;border following the session&#47;border corresponding to the number given (e.g. session&#47;border 2, session&#47;border 3, etc.).<BR>
- Any existing sessions&#47;borders higher than the number given will be overwritten.</TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">The parameter <I>szVolumeName</I> is used to specify the name to use for a new volume (if <I>dwTrackToLoad</I> = &quot;0&quot;) or to rename an existing volume. Only the first 11 characters of the volume label will typically be displayed when a disc made from the structure is read.<BR>
<BR>
<I>dwSwapThreshold</I> specifies the size below which files will be copied by PrimoSDK in a swap file, while<I> szTemp</I> specifies the user directory for those swap files. If all files are smaller than 2GB and <I>dwSwapThreshold</I> is set to &quot;<SPAN CLASS="Courier_New_Inline">0xFFFFFFFF</SPAN>&quot; then a complete image will exist on the hard disk before writing to disc.<BR>
<BR>
In addition to determining the file system, <I>dwFlags</I> is also used to specify various options, including whether or not the structure will be checked for duplication each time a file or folder is added with <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, and&#47;or <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A>:</P>
<UL CLASS="IndentSerif_List"><LI>If PRIMOSDK_CHECKDUPLI is included, each time a file or folder is added PrimoSDK will first check whether or not a file or folder of the same name already exists in the structure, in which case the adding function will have no effect except to return the error PRIMOSDK_ALREADYEXIST. Because the checking operation may significantly extend the time needed to add files, it is suggested that the flag be used only while confirming the call sequence during application debugging. The flag is not recommended when creating an image with several thousand files.</LI>
<LI>If PRIMOSDK_CHECKDUPLI is not included, overall performance will be better, but no error will be returned if a file or folder of the same name already exists in the structure (the call will have no effect).</LI></UL>
<P CLASS="IndentSerif">If the data structure initiated with this function will be saved as an image file without being written to disc, no drives need be specified with <I>pdwUnits</I> (the terminator &quot;<SPAN CLASS="Courier_New_Inline">0xFFFFFFFF</SPAN>&quot; is still required). In this situation, if the flag PRIMOSDK_DVDIMAGE is included in <I>dwFlags</I>, the result of a call to <A HREF="#PrimoSDK_SaveGI">PrimoSDK_SaveGI</A> will be a DVD image; if it is not included the result will be a CD image.<BR>
<BR>
Alternatively, if drives are specified with <I>pdwUnits</I> and those drives contain DVD media, calling PrimoSDK_SaveGI after the data structure is built will result in a DVD image. If the drives do not contain DVD media, the result will be a CD image.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>The optimal value of <I>dwSwapThreshold</I> may vary greatly from machine to machine. A fast PC can work without swap, but usually a swap from 2KB to 8KB is fine when in presence of a large number of files. Avoid using large values of <I>dwSwapThreshold</I>, as this could cause the cache file to exceed available hard-disk space.<BR>
<B>&#187; </B>When appending to a DVD-RW in restricted overwrite mode, a DVD+RW, or a DVD-RAM, the File System flag in <I>dwFlags</I> must be set to PRIMOSDK_UDF or PRIMOSDK_UDF201. If the existing file system on the media is not UDF, the function will return PRIMOSDK_ERRORLOADING.<BR>
<B>&#187; </B>After a successfully completed <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A> operation, an additional image-writing operation on different units or with different volume names may be performed without having to rebuild the image by passing the flag PRIMOSDK_RESETDRIVES as the only value in <I>dwFlags</I>.<BR>
<B>&#187; </B>The flag PRIMOSDK_MODE2 should not be used if writing to a DVD (if it is used, PRIMOSDK_MODE1 will be substituted automatically).<BR>
<B>&#187;</B> Include the optional flag PRIMOSDK_TAO in dwFlags when the structure created with this call is to be written to DVD-R DL.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_NewImage ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PBYTE szVolumeName,<BR>
DWORD dwTrackToLoad,<BR>
DWORD dwFlags,<BR>
DWORD dwSwapThreshold,<BR>
PBYTE szTemp </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szVolumeName</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the label of the volume, as well as some optional Primary Volume Descriptor fields, in the following format: Volume[,Publisher[,DataPreparer[,ApplicationID]]]. The maximum field length is 32 bytes for Volume and 128 bytes for the other three fields.</P>
<P CLASS="Code_Ital">dwTrackToLoad</P>
<P CLASS="Def_Field">A DWORD specifying the number of the session&#47;border to which or after which the new data structure will be appended (see table above). If &quot;0,&quot; the disc&#39;s existing data (if any) will not be retained.</P>
<P CLASS="Code_Ital">dwSwapThreshold</P>
<P CLASS="Def_Field">A DWORD specifying in KB the size below which files will be copied by PrimoSDK in a swap file generated in szTemp (e.g. if &quot;4,&quot; then all files under 4096 bytes will be copied). The maximum value is 256; a value of 0 means that no swap file is generated. The value 0xFFFFFFFF means that all files up to 2 GB will be cached; if all files are less than 2GB, then a complete image will exist on the hard disk before writing to CD&#47;DVD. Swap files are destroyed by <A HREF="#PrimoSDK_CloseImage">PrimoSDK_CloseImage</A>.</P>
<P CLASS="Code_Ital">szTemp</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the user directory in which to generate swap files.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD including one File System flag (see first list below); may also contain Optional flags (see second list below):<BR>
<B>File System flag</B> (use only one of the following values):<BR>
- PRIMOSDK_ISOLEVEL1 for an ISO 9660 Level 1 compliant CD with folder and file names in the 8+3 format using only the A-:-Z, 0-:-9 and &quot;_&quot; character set;<BR>
- PRIMOSDK_ISOLEVEL2 for an ISO 9660 Level 2 compliant CD (DOS OEM characters);<BR>
- PRIMOSDK_ISOLEVEL3 for an ISO 9660 Level 3 compliant CD (DOS OEM characters, long file names);<BR>
- PRIMOSDK_JOLIET for a Microsoft Joliet compliant CD with filenames up to 106 characters in all the Windows legal character set, double characters included (MBCS);<BR>
- PRIMOSDK_UDF for a UDF 1.02 bridge file system;<BR>
- PRIMOSDK_UDF201 for a UDF 2.01 bridge file system;<BR>
- PRIMOSDK_VERSIONLESS_ISO for a file system similar to ISO 9660 level 1 with no version numbers. This is a non-compliant file system included for use only with the ETFSBOOT.COM bootable CD loader.<BR>
<B>Optional flags</B> (except for PRIMOSDK_RESETDRIVES, used in combination with one File System flag from the list above):<BR>
- PRIMOSDK_ORIGDATE to maintain the original date&#47;time for all files, or PRIMOSDK_USERTIMESET to supply a date&#47;time for all streamed files (used only for files added with PrimoSDK_AddFileStreamWCS), or PRIMOSDK_SETNOW to have all files set to the date&#47;time at which PrimoSDK_NewImage is called (these three flags are mutually exclusive);<BR>
- PRIMOSDK_MODE1 to make a CD-ROM Mode 1 disc or a DVD, or PRIMOSDK_MODE2 to make a CD-ROM Mode 2 XA disc (these two flags are mutually exclusive);<BR>
- PRIMOSDK_TAO if the disc is written Track At Once (must not be combined with PRIMOSDK_SAO; will result in PRIMOSDK_BADPARAM error). Required for DVD multi-border (DVD-RW, DVD-R, DVD+R), and for DVD-R DL layer jump. Optional for CD-R&#47;RW, DDCD-R&#47;RW;<BR>
- PRIMOSDK_SAO if the disc must be written Session At Once (must not be combined with PRIMOSDK_SAO). Combined with PRIMOSDK_CLOSEDISC, this flag lets you make any type of recording. When PRIMOSDK_SAO is not specified the recording is done Track At Once;<BR>
- PRIMOSDK_CLOSEDISC if the disc must be closed to prevent the addition of any subsequent sessions;<BR>
- PRIMOSDK_CHECKDUPLI if <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, and <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A> are to check the existing data structure before adding each file or folder. The check will return an error if the file or folder already exists or the nested path has not already been created. The use of this flag could slow down the time needed to add files to the image;<BR>
- PRIMOSDK_RESETDRIVES (must be passed alone) is used only after a successfully completed <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A> operation to prepare for an additional image-writing operation on different units or with different volume names; it allows the new operation without having to rebuild the image;<BR>
- PRIMOSDK_VIDEOCD enables the engine recognition of the VCD 2.0&#47;SVCD directories;<BR>
- PRIMOSDK_DVDIMAGE set this if the image is to be written to a DVD. This flag is ignored if there are units in <I>pdwUnit</I>s.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple the drives containing the discs to which the data structure is to be written (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format). The vector is terminated by 0xFFFFFFFF.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">A unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters are incorrect (e.g. the track specified with <I>dwTrackToLoad</I> does not exist on the specified disc).</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">A unit is not ready.
</P>
<P CLASS="Code_Ital">PRIMOSDK_ERRORLOADING</P>
<P CLASS="Def_Field">Error reading the directory of the session&#47;border specified with <I>dwTrackToLoad</I>.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDMEDIUM</P>
<P CLASS="Def_Field">A target disc is neither blank nor appendable, or the appendable discs referenced with <I>pdwUnits</I> are not all identical.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_NewImageWCS initiates the building of a file structure for a Data CD or a DVD. This call is essentially the same as <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A>, except that the volume name is given as a Unicode string rather than an ASCII string.<BR>
<BR>
The file structure is built in the file system specified with the parameter <I>dwFlags</I>. As outlined in <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A> above, the structure is subsequently populated with files and folders, at which point it may be written to a disc in the drive specified with <I>pdwUnits</I> or saved as a generic image or Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file.<BR>
<BR>
If written to disc, the file structure may either be written as a new image or appended to an existing image (assuming this is supported by the media type of the specified disc). The parameter <I>dwTrackToLoad</I> gives some control over how this will happen by indicating the session (for CD) or border (for DVD) from which the existing file system structure is to be read when appending. This allows the overwriting of sessions&#47;borders that are contiguous to the end of the disc&#39;s existing content. The highest valid value for <I>dwTrackToLoad</I> equals the value of <I>pdwTracks</I> as output by <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>.<BR>
<BR>
The following table shows the value to use for <I>dwTrackToLoad</I> depending on the desired outcome and the format of the disc in the drive (see values for <I>pdwMediumFormat</I> in <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>):</P>
<TABLE ALIGN="center" WIDTH="95%" BORDER="1" CELLSPACING="0" CELLPADDING="5" CLASS="TableSans"><TBODY VALIGN="top">
<TR CLASS="TableSansHead"><TD><I>dwTrackToLoad</I></TD>
<TD>Single-border media:<BR>
DVD-RAM, DVD+RW, and DVD-RW restricted overwrite</TD>
<TD>Multi-session&#47;border media:<BR>
all other media types, including DVD-RW incremental sequential</TD></TR>
<TR><TD><B>0</B></TD>
<TD>- Create a fresh volume.<BR>
- The disc&#39;s existing data (if any) is overwritten.</TD>
<TD>- Create a fresh volume<BR>
- The disc&#39;s existing data (if any) is overwritten.</TD></TR>
<TR><TD><B>1</B></TD>
<TD>- Append the data structure to the volume&#39;s existing data (all data is in border 1).<BR>
- Existing file system must be UDF.</TD>
<TD>- Append the data structure in a new session&#47;border following session&#47;border 1.<BR>
- Any existing sessions&#47;borders 2 or higher will be overwritten.</TD></TR>
<TR><TD><B>2, 3, etc.</B></TD>
<TD>Not used.</TD>
<TD>- Append the data structure in a new session&#47;border following the session&#47;border corresponding to the number given (e.g. session&#47;border 2, session&#47;border 3, etc.).<BR>
- Any existing sessions&#47;borders higher than the number given will be overwritten.</TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">The parameter <I>szVolumeNameWCS</I> is used to specify the name to use for a new volume (if <I>dwTrackToLoad</I> = &quot;0&quot;) or to rename an existing volume. Only the first 11 characters of the volume label will typically be displayed when a disc made from the structure is read.<BR>
<BR>
<I>dwSwapThreshold</I> specifies the size below which files will be copied by PrimoSDK in a swap file, while<I> szTemp</I> specifies the user directory for those swap files. If all files are smaller than 2GB and <I>dwSwapThreshold</I> is set to &quot;<SPAN CLASS="Courier_New_Inline">0xFFFFFFFF</SPAN>&quot; then a complete image will exist on the hard disk before writing to disc.<BR>
<BR>
In addition to determining the file system, <I>dwFlags</I> is also used to specify various options, including whether or not the structure will be checked for duplication each time a file or folder is added with <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, or <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A>:</P>
<UL CLASS="IndentSerif_List"><LI>If PRIMOSDK_CHECKDUPLI is included, each time a file or folder is added PrimoSDK will first check whether or not a file or folder of the same name already exists in the structure, in which case the adding function will have no effect except to return the error PRIMOSDK_ALREADYEXIST. Because the checking operation may significantly extend the time needed to add files, it is suggested that the flag be used only while confirming the call sequence during application debugging. The flag is not recommended when creating an image with several thousand files.</LI>
<LI>If PRIMOSDK_CHECKDUPLI is not included, overall performance will be better, but no error will be returned if a file or folder of the same name already exists in the structure (the call will have no effect).</LI></UL>
<P CLASS="IndentSerif">If the data structure initiated with this function will be saved as an image file without being written to disc, no drives need be specified with <I>pdwUnits</I> (the terminator &quot;<SPAN CLASS="Courier_New_Inline">0xFFFFFFFF</SPAN>&quot; is still required). In this situation, if the flag PRIMOSDK_DVDIMAGE is included in <I>dwFlags</I>, the result of a call to <A HREF="#PrimoSDK_SaveGI">PrimoSDK_SaveGI</A> will be a DVD image; if it is not included the result will be a CD image.<BR>
<BR>
Alternatively, if drives are specified with <I>pdwUnits</I> and those drives contain DVD media, calling PrimoSDK_SaveGI after the data structure is built will result in a DVD image. If the drives do not contain DVD media, the result will be a CD image.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>The optimal value of <I>dwSwapThreshold</I> may vary greatly from machine to machine. A fast PC can work without swap, but usually a swap from 2KB to 8KB is fine when in presence of a large number of files. Avoid using large values of <I>dwSwapThreshold</I>, as this could cause the cache file to exceed available hard-disk space.<BR>
<B>&#187; </B>When appending to a DVD-RW in restricted overwrite mode, a DVD+RW, or a DVD-RAM, the File System flag in <I>dwFlags</I> must be set to PRIMOSDK_UDF or PRIMOSDK_UDF201. If the existing file system on the media is not UDF, the function will return PRIMOSDK_ERRORLOADING.<BR>
<B>&#187; </B>After a successfully completed <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A> operation, an additional image-writing operation on different units or with different volume names may be performed without having to rebuild the image by passing the flag PRIMOSDK_RESETDRIVES as the only value in <I>dwFlags</I>.<BR>
<B>&#187; </B>The flag PRIMOSDK_MODE2 should not be used if writing to a DVD (if it is used, PRIMOSDK_MODE1 will be substituted automatically).<B><BR>
&#187;</B> Include the optional flag PRIMOSDK_TAO in dwFlags when the structure created with this call is to be written to DVD-R DL.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_NewImageWCS( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PWORD szVolumeNameWCS,<BR>
DWORD dwTrackToLoad,<BR>
DWORD dwFlags,<BR>
DWORD dwSwapThreshold,<BR>
PBYTE szTemp </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szVolumeNameWCS</P>
<P CLASS="Def_Field">A pointer to a PWORD specifying the label of the volume, as well as some optional Primary Volume Descriptor fields, in one of the following formats:<BR>
- \nVolume[\nPublisher[\nDataPreparer[\nApplicationID[\nSystemID]]]]<BR>
- Volume[,Publisher[,DataPreparer[,ApplicationID]]]. <BR>
The maximum field length is 32 bytes for Volume and 128 bytes for the other three fields.</P>
<P CLASS="Code_Ital">dwTrackToLoad</P>
<P CLASS="Def_Field">A DWORD specifying the number of the session&#47;border to which or after which the new data structure will be appended (see table above). If &quot;0,&quot; the disc&#39;s existing data (if any) will not be retained.</P>
<P CLASS="Code_Ital">dwSwapThreshold</P>
<P CLASS="Def_Field">A DWORD specifying in KB the size below which files will be copied by PrimoSDK in a swap file generated in szTemp (e.g. if &quot;4,&quot; then all files under 4096 bytes will be copied). The maximum value is 256; a value of 0 means that no swap file is generated. The value 0xFFFFFFFF means that all files up to 2 GB will be cached; if all files are less than 2GB, then a complete image will exist on the hard disk before writing to CD&#47;DVD. Swap files are destroyed by <A HREF="#PrimoSDK_CloseImage">PrimoSDK_CloseImage</A>.</P>
<P CLASS="Code_Ital">szTemp</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the user directory in which to generate swap files.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD including one File System flag (see first list below); may also contain Optional flags (see second list below):<BR>
<B>File System flag</B> (use only one of the following values):<BR>
- PRIMOSDK_ISOLEVEL1 for an ISO 9660 Level 1 compliant CD with folder and file names in the 8+3 format using only the A-:-Z, 0-:-9 and &quot;_&quot; character set;<BR>
- PRIMOSDK_ISOLEVEL2 for an ISO 9660 Level 2 compliant CD (DOS OEM characters);<BR>
- PRIMOSDK_ISOLEVEL3 for an ISO 9660 Level 3 compliant CD (DOS OEM characters, long file names);<BR>
- PRIMOSDK_JOLIET for a Microsoft Joliet compliant CD with filenames up to 106 characters in all the Windows legal character set, double characters included (MBCS);<BR>
- PRIMOSDK_UDF for a UDF 1.02 bridge file system;<BR>
- PRIMOSDK_UDF201 for a UDF 2.01 bridge file system;<BR>
- PRIMOSDK_VERSIONLESS_ISO for a file system similar to ISO 9660 level 1 with no version numbers. This is a non-compliant file system included for use only with the ETFSBOOT.COM bootable CD loader.<BR>
<B>Optional flags</B> (except for PRIMOSDK_RESETDRIVES, used in combination with one File System flag from the list above):<BR>
- PRIMOSDK_ORIGDATE to maintain the original date&#47;time for all files, or PRIMOSDK_USERTIMESET to supply a date&#47;time for all streamed files (used only for files added with PrimoSDK_AddFileStreamWCS), or PRIMOSDK_SETNOW to have all files set to the date&#47;time at which PrimoSDK_NewImage is called (these three flags are mutually exclusive);<BR>
- PRIMOSDK_MODE1 to make a CD-ROM Mode 1 disc or a DVD, or PRIMOSDK_MODE2 to make a CD-ROM Mode 2 XA disc (these two flags are mutually exclusive);<BR>
- PRIMOSDK_TAO if the disc is written Track At Once (must not be combined with PRIMOSDK_SAO; will result in PRIMOSDK_BADPARAM error). Required for DVD multi-border (DVD-RW, DVD-R, DVD+R), and for DVD-R DL layer jump. Optional for CD-R&#47;RW, DDCD-R&#47;RW;<BR>
- PRIMOSDK_SAO if the disc must be written Session At Once (must not be combined with PRIMOSDK_SAO). Combined with PRIMOSDK_CLOSEDISC, this flag lets you make any type of recording. When PRIMOSDK_SAO is not specified the recording is done Track At Once;<BR>
- PRIMOSDK_CLOSEDISC if the disc must be closed to prevent the addition of any subsequent sessions;<BR>
- PRIMOSDK_CHECKDUPLI if <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, and <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A> are to check the existing data structure before adding each file or folder. The check will return an error if the file or folder already exists or the nested path has not already been created. The use of this flag could slow down the time needed to add files to the image;<BR>
- PRIMOSDK_RESETDRIVES (must be passed alone) is used only after a successfully completed <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A> operation to prepare for an additional image-writing operation on different units or with different volume names; it allows the new operation without having to rebuild the image;<BR>
- PRIMOSDK_VIDEOCD enables the engine recognition of the VCD 2.0&#47;SVCD directories;<BR>
- PRIMOSDK_DVDIMAGE set this if the image is to be written to a DVD. This flag is ignored if there are units in <I>pdwUnit</I>s.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple the drives containing the discs to which the data structure is to be written (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format). The vector is terminated by 0xFFFFFFFF.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">A unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters are incorrect (e.g. the track specified with <I>dwTrackToLoad</I> does not exist on the specified disc).</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">A unit is not ready.
</P>
<P CLASS="Code_Ital">PRIMOSDK_ERRORLOADING</P>
<P CLASS="Def_Field">Error reading the directory of the session&#47;border specified with <I>dwTrackToLoad</I>.</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDMEDIUM</P>
<P CLASS="Def_Field">A target disc is neither blank nor appendable, or the appendable discs referenced via <I>pdwUnits</I> are not all identical.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddFolder">PrimoSDK_AddFolder</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddFolder adds a folder to a data structure. This call is essentially the same as <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, except that the folder name is given as an ASCII string rather than a Unicode string.<BR>
<BR>
The data structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (<A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). As outlined in <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A> above, after the structure is populated with folders and files it may be written to a disc or saved as a generic image or Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file.<BR>
<BR>
The name of the new folder is specified with <I>szFolder</I>. The folder&#39;s path must be fully specified except for the root, meaning that <I>szFolder</I> includes all parents in the path. A leading backslash is mandatory, while a trailing backslash is optional.<BR>
<BR>
Only one level is added each time the function is called. If a given folder is added under another folder without first adding the higher-level folder, the operation has no effect. For instance, the folder &quot; <SPAN CLASS="Courier_New_Inline">\Docs\Letters</SPAN>&quot; cannot be added unless the folder &quot; <SPAN CLASS="Courier_New_Inline">\Docs</SPAN>&quot; has been added earlier.<BR>
<BR>
The following example illustrates a sequence of calls to create two subfolders in a given folder, one of which has a sub-subfolder:</P>
<OL CLASS="IndentSerif_NumList"><LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolder(dwHandle,&quot;\My Folder&quot;)</SPAN></LI>
<LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolder(dwHandle,&quot;\My Folder\My Subfolder&quot;)</SPAN></LI>
<LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolder(dwHandle,&quot;\My Folder\My Second Subfolder&quot;)</SPAN></LI>
<LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolder(dwHandle,&quot;\My Folder\My Second Subfolder\My Sub-subfolder&quot;)</SPAN></LI></OL>
<P CLASS="IndentSerif"><B>NOTES:</B><BR>
<B>&#187;</B> If the structure already contains a folder at the path specified with <I>szFolder</I>, this call will have no effect. The error PRIMOSDK_ALREADYEXIST may be returned, but only if the parameter <I>dwFlags</I> in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call that created the structure included the flag PRIMOSDK_CHECKDUPLI.<BR>
<B>&#187;</B> Valid characters for the value of <I>szFolder</I> are determined by the File System Flag used in the parameter <I>dwFlags</I> when the data structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS. For example, if <I>dwFlags</I> specified PRIMOSDK_ISOLEVEL1, the length of the folder name is limited to eight characters drawn from the ISO 9660 Level 1 character set. </P>
<P CLASS="SubHead_Sans11"><BR>
Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddFolder ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szFolder </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">szFolder</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the folder path in MBCS. The name of the new folder must be allowed under the data structure&#39;s file system as specified in PrimoSDK_NewImage or PrimoSDK_NewImageWCS when the structure was created.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the target data structure hasn&#39;t yet been started, or  some folders in the path have not yet been added (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">Folder name is incorrect or too long.</P>
<P CLASS="Code_Ital">PRIMOSDK_ALREADYEXIST</P>
<P CLASS="Def_Field">The folder specified with <I>szFolder</I> has been already added (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">The data structure contains too many files for the system memory.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddFolderWCS adds a folder to a data structure. This call is essentially the same as <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, except that the folder name is given as a Unicode string rather than an ASCII string.<BR>
<BR>
The data structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (<A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). As outlined in <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A> above, after the structure is populated with folders and files it may be written to a disc or saved as a generic image or Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file.<BR>
<BR>
The name of the new folder is specified with <I>szFolder</I>. The folder&#39;s path must be fully specified except for the root, meaning that <I>szFolder</I> includes all parents in the path. A leading backslash is mandatory, while a trailing backslash is optional.<BR>
<BR>
Only one level is added each time the function is called. If a given folder is added under another folder without first adding the higher-level folder, the operation has no effect. For instance, the folder &quot; <SPAN CLASS="Courier_New_Inline">\Docs\Letters</SPAN>&quot; cannot be added unless the folder &quot; <SPAN CLASS="Courier_New_Inline">\Docs</SPAN>&quot; has been added earlier.<BR>
<BR>
The following example illustrates a sequence of calls to create two subfolders in a given folder, one of which has a sub-subfolder:</P>
<OL CLASS="IndentSerif_NumList"><LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolderWCS(dwHandle,&quot;\My Folder&quot;)</SPAN></LI>
<LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolderWCS(dwHandle,&quot;\My Folder\My Subfolder&quot;)</SPAN></LI>
<LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolderWCS(dwHandle,&quot;\My Folder\My Second Subfolder&quot;)</SPAN></LI>
<LI><SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFolderWCS(dwHandle,&quot;\My Folder\My Second Subfolder\My Sub-subfolder&quot;)</SPAN></LI></OL>
<P CLASS="IndentSerif"><B>NOTES:</B><BR>
<B>&#187;</B> If the structure already contains a folder at the path specified with <I>szFolder</I>, this call will have no effect. The error PRIMOSDK_ALREADYEXIST may be returned, but only if the parameter <I>dwFlags</I> in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call that created the structure included the flag PRIMOSDK_CHECKDUPLI.<BR>
<B>&#187;</B> Valid characters for the value of <I>szFolder</I> are determined by the File System Flag used in the parameter <I>dwFlags</I> when the data structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS. For example, if <I>dwFlags</I> specified PRIMOSDK_ISOLEVEL1, the length of the folder name is limited to eight characters drawn from the ISO 9660 Level 1 character set. </P>
<P CLASS="SubHead_Sans11"><BR>
Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddFolderWCS ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PWORD szFolder </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">szFolder</P>
<P CLASS="Def_Field">A pointer to a WORD specifying the folder path in MBCS. The name of the new folder must be allowed under the data structure&#39;s file system as specified in PrimoSDK_NewImage or PrimoSDK_NewImageWCS when the structure was created.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the target data structure hasn&#39;t yet been started, or  some folders in the path have not yet been added (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">Folder name is incorrect or too long.</P>
<P CLASS="Code_Ital">PRIMOSDK_ALREADYEXIST</P>
<P CLASS="Def_Field">The folder specified with <I>szFolder</I> has been already added (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">The data structure contains too many files for the system memory.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddFile">PrimoSDK_AddFile</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddFile adds a file to a data structure. This call is essentially the same as <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A>, except that the source and destination paths are given as ASCII strings rather than Unicode strings.<BR>
<BR>
The data structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (<A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). As outlined in <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A> above, after the structure is populated with folders and files it may be written to a disc or saved as a generic image or Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file.<BR>
<BR>
The name of the source file is specified with <I>szSourceFile</I>. The file&#39;s path must be fully specified, including its root. The name of the file as it is to appear in the data structure is specified with the parameter <I>szFileOnCD</I>. The file&#39;s path must be fully specified except for the root; a leading backslash is mandatory.<BR>
<BR>
Only one level is added each time the function is called. If a given file is added without first adding the folder that is to contain it, the operation has no effect. For instance, the file &quot; <SPAN CLASS="Courier_New_Inline">\Docs\Letter1.txt</SPAN>&quot; cannot be added unless the folder &quot; <SPAN CLASS="Courier_New_Inline">\Docs</SPAN>&quot; has been added earlier.<BR>
<BR>
The following two examples illustrate typical uses of this function:</P>
<UL CLASS="IndentSerif_List"><LI>Add the file &quot;<SPAN CLASS="Courier_New_Inline"><I>FileName</I>.Txt</SPAN>&quot; that is stored in &quot;<SPAN CLASS="Courier_New_Inline">D:\Source</SPAN>&quot; to the data structure at root level (without changing the file&#39;s name):<BR>
<SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFile(dwHandle,&quot;\<I>FileName</I>.Txt&quot;,&quot;D:\Source\<I>FileName</I>.Txt&quot;)</SPAN></LI>
<LI>Add the same file to the folder &quot; <SPAN CLASS="Courier_New_Inline">\My Folder</SPAN>&quot; (which must already exist in the structure; see <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A> or <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>) with a new name &quot;<SPAN CLASS="Courier_New_Inline"><I>NewName</I>.Txt</SPAN>&quot;:<BR>
<SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFile(dwHandle,&quot;\My Folder\<I>NewName</I>.Txt&quot;,&quot;D:\Source\<I>FileName</I>.Txt&quot;) </SPAN></LI></UL>
<P CLASS="IndentSerif"><B>NOTE</B>: If the structure already contains a file at the path specified with <I>szFileOnCD</I>, this call will have no effect. The error PRIMOSDK_ALREADYEXIST may be returned, but only if the parameter <I>dwFlags</I> in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call that created the structure included the flag PRIMOSDK_CHECKDUPLI.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddFile ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szFileOnCD,<BR>
PBYTE szSourceFile </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">szFileOnCD</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying in MBCS the path of the file as it will appear in the data structure.</P>
<P CLASS="Code_Ital">szSourceFile</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the complete path of the source file.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the target data structure hasn&#39;t yet been started, or  some folders in the path have not yet been added (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">A file name is incorrect or too long.</P>
<P CLASS="Code_Ital">PRIMOSDK_ALREADYEXIST</P>
<P CLASS="Def_Field">A file already exists at the path specified with <I>szFileOnCD</I> (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADABLE</P>
<P CLASS="Def_Field">The source file specified with <I>szSourceFile</I> is not found or not readable.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The added file is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILETOOLARGE</P>
<P CLASS="Def_Field">The added file is bigger than 9.99 GB for UDF or 4 GB for ISO.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">The data structure contains too many files for the system memory.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddFileWCS adds a file to a data structure. This call is essentially the same as <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, except that the source and destination paths are given as Unicode strings rather than ASCII strings.<BR>
<BR>
The data structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (<A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). As outlined in <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A> above, after the structure is populated with folders and files it may be written to a disc or saved as a generic image or Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file.<BR>
<BR>
The name of the source file is specified with <I>szSourceFile</I>. The file&#39;s path must be fully specified, including its root. The name of the file as it is to appear in the data structure is specified with the parameter <I>szFileOnCD</I>. The file&#39;s path must be fully specified except for the root; a leading backslash is mandatory.<BR>
<BR>
Only one level is added each time the function is called. If a given file is added without first adding the folder that is to contain it, the operation has no effect. For instance, the file &quot; <SPAN CLASS="Courier_New_Inline">\Docs\Letter1.txt</SPAN>&quot; cannot be added unless the folder &quot; <SPAN CLASS="Courier_New_Inline">\Docs</SPAN>&quot; has been added earlier.<BR>
<BR>
The following two examples illustrate typical uses of this function:</P>
<UL CLASS="IndentSerif_List"><LI>Add the file &quot;<SPAN CLASS="Courier_New_Inline"><I>FileName</I>.Txt</SPAN>&quot; that is stored in &quot;<SPAN CLASS="Courier_New_Inline">D:\Source</SPAN>&quot; to the data structure at root level (without changing the file&#39;s name):<BR>
<SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFileWCS(dwHandle,&quot;\<I>FileName</I>.Txt&quot;,&quot;D:\Source\<I>FileName</I>.Txt&quot;)</SPAN></LI>
<LI>Add the same file to the folder &quot; <SPAN CLASS="Courier_New_Inline">\My Folder</SPAN>&quot; (which must already exist in the structure; see <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A> or <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>) with a new name &quot;<SPAN CLASS="Courier_New_Inline"><I>NewName</I>.Txt</SPAN>&quot;:<BR>
<SPAN CLASS="Courier_New_Inline">PrimoSDK_AddFileWCS(dwHandle,&quot;\My Folder\<I>NewName</I>.Txt&quot;,&quot;D:\Source\<I>FileName</I>.Txt&quot;) </SPAN></LI></UL>
<P CLASS="IndentSerif"><B>NOTE</B>: If the structure already contains a file at the path specified with <I>szFileOnCD</I>, this call will have no effect. The error PRIMOSDK_ALREADYEXIST may be returned, but only if the parameter <I>dwFlags</I> in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call that created the structure included the flag PRIMOSDK_CHECKDUPLI.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddFileWCS ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PWORD szFileOnCD,<BR>
PWORD szSourceFile </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">szFileOnCD</P>
<P CLASS="Def_Field">A pointer to a WORD specifying in MBCS the path of the file as it will appear in the data structure.</P>
<P CLASS="Code_Ital">szSourceFile</P>
<P CLASS="Def_Field">A pointer to a WORD specifying the complete path of the source file.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the target data structure hasn&#39;t yet been started, or  some folders in the path have not yet been added (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">A file name is incorrect or too long.</P>
<P CLASS="Code_Ital">PRIMOSDK_ALREADYEXIST</P>
<P CLASS="Def_Field">A file already exists at the path specified with <I>szFileOnCD</I> (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADABLE</P>
<P CLASS="Def_Field">The source file specified with <I>szSourceFile</I> is not found or not readable.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The added file is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILETOOLARGE</P>
<P CLASS="Def_Field">The added file is bigger than 9.99 GB for UDF or 4 GB for ISO.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">The data structure contains too many files for the system memory.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occurred.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddBootable">PrimoSDK_AddBootable</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddBootable adds to an existing data structure a separate boot image file compliant with the El Torito specification. The data structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (see <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>).<BR>
<BR>
The boot image file to add to the structure is specified with <I>szBootImageFile</I>. This file allows a computer whose system BIOS is capable of supporting a bootable CD-ROM to reboot from a disc made from the structure. The type of bootable image specified with <I>dwFlags</I> determines the behavior at the time of reboot:</P>
<TABLE ALIGN="center" WIDTH="95%" BORDER="1" CELLSPACING="0" CELLPADDING="5" CLASS="TableSans"><TBODY VALIGN="top">
<TR CLASS="TableSansHead"><TD>Image type</TD>
<TD>Reboot behavior</TD></TR>
<TR><TD>Floppy disk </TD>
<TD>- CD&#47;DVD drive boots as drive A, original drive A will become drive B, and the original drive B will be unavailable;<BR>
- &quot;floppy image&quot; stored on disc is booted. </TD></TR>
<TR><TD>Hard disk</TD>
<TD>- CD&#47;DVD drive boots as drive C and all hard disk drive letters will be shifted up one letter;<BR>
- &quot;hard disk image&quot; stored on disc is booted.</TD></TR>
<TR><TD>&quot;No emulation&quot;</TD>
<TD>- uses a private loader;<BR>
- the boot image is loaded into memory and executed.</TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This function must be called after all the desired folders and files to be included in the bootable floppy disk image have been added to the structure with <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, and&#47;or <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A>. As with any other data structure, the structure may subsequently be written to a disc or saved as a generic image or Global Image (<SPAN CLASS="Courier_New_Inline">.GI</SPAN>) file.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddBootable ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szBootImageFile,<BR>
DWORD dwFlags </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">szBootImageFile</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying a path for the boot image file to add to the structure.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD specifying one of the values for the type of bootable image:<BR>
- 144 for 1.44 floppy images;<BR>
- 288 for 2.88 floppy images;<BR>
- PRIMOSDK_HD for Hard Drive images;<BR>
- PRIMOSDK_NOEMULATION for a special boot image which uses a private loader.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized or the data structure hasn&#39;t yet been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADABLE</P>
<P CLASS="Def_Field">The boot image file is not found or not readable.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_GetSpaceUsed">PrimoSDK_GetSpaceUsed</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_GetSpaceUsed calculates the number of free sectors needed to write the current data structure to a disc. The data structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (<A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>).<BR>
<BR>
The format (and thus the sector size) on which the call bases its calculations is determined by the settings that were used in <I>dwFlags</I> when the structure was created. The result of the calculation, output with <I>pdwSize</I>, reflects not only the space required for data within files but also for overhead (file system, lead in&#47;out, etc.). By subtracting the value of <I>pdwSize</I> from the value of <I>pdwFree</I> as output by <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A> (or <A HREF="#PrimoSDK_DiscInfo">PrimoSDK_DiscInfo</A>), it&#39;s possible to determine how much additional data, if any, may be added to the current data structure.<BR>
<BR>
This call also outputs (with <I>pdwLastSector</I>) the last sector that would be written to if the current data structure were written to a disc. Since all drives that were specified with <I>pdwUnits</I> when the data structure was created must contain identical media, this sector number applies to all destination media. The destination media will be assumed to be blank if the drives are empty or if no drives were specified when the data structure was created (i.e. the structure is to be written to an image file).</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_GetSpaceUsed(</P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwSize,<BR>
PDWORD pdwLastSector</P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation handle</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSize</P>
<P CLASS="Def_Field">A pointer to the DWORD that will be filled in with the number of sectors required to write the data structure to disc (data + metadata).</P>
<P CLASS="Code_Ital">pdwLastSector</P>
<P CLASS="Def_Field">A pointer to the DWORD that will be filled in with the address of the last sector that would be written to if the data structure were written to disc.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the target data structure hasn&#39;t yet been started, or  some folders in the path have not yet been added (only if PRIMOSDK_CHECKDUPLI was included in <I>dwFlags</I> when the structure was created with PrimoSDK_NewImage or PrimoSDK_NewImageWCS).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_SaveGI">PrimoSDK_SaveGI</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_SaveGI writes a data structure to a Global Image file. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (see <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). The file to which the image is written is specified with <I>szGIFileName</I>, while the size (in sectors) that would be required to record the image to a blank disc (see <A HREF="#PrimoSDK_WriteGI">PrimoSDK_WriteGI</A>) is output with <I>pdwSize</I>.<BR>
<BR>
The type (CD or DVD) of image saved by this call is determined by settings in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call that created the structure to be saved.</P>
<UL CLASS="IndentSerif_List"><LI>If the parameter <I>pdwUnits</I> specified record drives, then:<BR>
- if those drives contained DVD media, the result of this call will be a DVD image;<BR>
- if the drives did not contain DVD media, the result will be a CD image.</LI>
<LI>If the parameter <I>pdwUnits</I> was passed as only &quot;<SPAN CLASS="Courier_New_Inline">0xFFFFFFFF</SPAN>&quot; (the structure was not intended to be written directly to disc), then:<BR>
- if the flag PRIMOSDK_DVDIMAGE was included in <I>dwFlags</I>, the result of this call will be a DVD image;<BR>
- if PRIMOSDK_DVDIMAGE was not included the result will be a CD image.</LI></UL>
<P CLASS="IndentSerif">This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: This function does not engage any recorder.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_SaveGI ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szGIFileName,<BR>
PDWORD pdwSize </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">szGIFileName</P>
<P CLASS="Def_Field">A pointer to a BYTE giving either the full path or the name of the Global Image file. If the full path is not specified, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSize</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total sectors required to record the newly-created Global Image to a blank disc.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the data structure hasn&#39;t yet been started, or the data structure is empty.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">The hard disk disk does not have enough free sectors for the file.</P>
<P CLASS="Code_Ital">PRIMOSDK_TMPOVERFLOW</P>
<P CLASS="Def_Field">A temporary file went into overflow.</P>
<P CLASS="Code_Ital">PRIMOSDK_DVDSTRUCTERROR</P>
<P CLASS="Def_Field">The data structure includes a VIDEO_TS or AUDIO_TS folder that is not compliant with DVD-Video or DVD-Audio rules (DVD version only).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_SaveImage">PrimoSDK_SaveImage</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_SaveImage writes the current data structure to a generic ISO image file. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (see <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). The file to which the image is written is specified with <I>szGIFileName</I>, while the size (in sectors) that would be required to record the image to a blank disc (see <A HREF="#PrimoSDK_WriteOtherCDImage">PrimoSDK_WriteOtherCDImage</A>) is output with pdwSize.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: This function does not engage any recorder.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_SaveImage ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szFileName,<BR>
PDWORD pdwSize </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">szGIFileName</P>
<P CLASS="Def_Field">A pointer to a BYTE giving either the full path or the name of the generic image file. If the full path is not specified, PrimoSDK will assume that the file is in the current working directory.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSize</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total sectors required to record the newly-created generic image to a blank disc.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the data structure hasn&#39;t yet been started, or the data structure is empty.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">The hard disk disk does not have enough free sectors for the file.</P>
<P CLASS="Code_Ital">PRIMOSDK_TMPOVERFLOW</P>
<P CLASS="Def_Field">A temporary file went into overflow.</P>
<P CLASS="Code_Ital">PRIMOSDK_DVDSTRUCTERROR</P>
<P CLASS="Def_Field">The data structure includes a VIDEO_TS or AUDIO_TS folder that is not compliant with DVD-Video or DVD-Audio rules (DVD version only).</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_WriteImage">PrimoSDK_WriteImage</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_WriteImage writes a data structure to one or more discs, either actually or in &quot;test write&quot; mode. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (see <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). The drives on which the discs will be recorded are those specified with <I>pdwUnits</I> in that same PrimoSDK_NewImage or PrimoSDK_NewImageWCS call. Each recorder must already contain a blank recordable&#47;rewritable disc (see <I>pdwMediumType</I> under <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>).<BR>
<BR>
The &quot;test write&quot; mode is specified with <I>dwFlags</I>, and the record speed is specified with <I>dwSpeed</I>. The total sectors that will be used in recording the structure to disc is output with <I>pdwSize</I>.<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>This call is used as part of the recommended write operation sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.<BR>
<B>&#187; </B>Until the data structure is terminated with <A HREF="#PrimoSDK_CloseImage">PrimoSDK_CloseImage</A>, this function may be called multiple times to record the image in multiple passes.<BR>
<B>&#187;</B> If <I>dwSpeed</I> specifies a speed that is not supported by the destination drive, the drive will be set to record at the closest slower speed.<BR>
<B>&#187;</B> The DVD+R, DVD+RW, and DVD+RAM formats do not support a &quot;test write&quot; mode. If a test write is attempted to a destination disc in one of those formats, this function will return PRIMOSDK_BADPARAM.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_WriteImage ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed,<BR>
PDWORD pdwSize </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_WRITE to make a real recording, or PRIMOSDK_TEST to run a test;<BR>
- PRIMOSDK_BURNPROOF to enable BURN-Proof (buffer underrun protection) if available on the destination drive;<BR>
- PRIMOSDK_DVDPRQUICK to not force a 30mm Lead Out when recording to DVD+R;<BR>
- PRIMOSDK_VNR_WRITE to enable Verify-Not-Required functionality on BD-R media;<BR>
- PRIMOSDK_ALLOW_NONSTANDARD_LAYER to allow non-compliant layer break on DVD Video.<BR>
- PRIMOSDK_DVDRWCOMPAT to close DVD-RW discs in most compatible mode.</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by both the destination drive and destination media;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x);<BR>
- PRIMOSDK_BEST for drives that support Adjustable Write Speed. If the drive does not support AWS, the speed will revert to PRIMOSDK_MAX.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwSize</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the total sectors required to record the image to disc.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the data structure hasn&#39;t yet been started, or the data structure is empty.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters in the function are incorrect, or no drives have been specified with <I>pdwUnits</I> in PrimoSDK_NewImage or PrimoSDK_NewImageWCS.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">One or more units are not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_TMPOVERFLOW</P>
<P CLASS="Def_Field">A temporary file went into overflow.</P>
<P CLASS="Code_Ital">PRIMOSDK_DVDSTRUCTERROR</P>
<P CLASS="Def_Field">The data structure includes a VIDEO_TS or AUDIO_TS folder that is not compliant with DVD-Video or DVD-Audio rules (DVD version only).</P>
<P CLASS="Code_Ital">PRIMOSDK_ITSADEMO</P>
<P CLASS="Def_Field">The operation exceeds the limits allowed by the Demo version of PrimoSDK.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">A file that was added to the data structure can no longer be found.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_VerifyImage">PrimoSDK_VerifyImage</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_VerifyImage verifies one or more written discs against the current data structure. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (see <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A>). The drives containing the discs to be verified are those specified with <I>pdwUnits</I> in that same PrimoSDK_NewImage or PrimoSDK_NewImageWCS call. The verification speed is set with <I>dwSpeed</I>.<BR>
<BR>
This function is used after<A HREF="# PrimoSDK_WriteImage"> PrimoSDK_WriteImage</A> and before the data structure is terminated with <A HREF="#PrimoSDK_CloseImage">PrimoSDK_CloseImage</A>. The call returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>.<BR>
<BR>
<B>NOTE</B>: To check on the result of an individual verification, use <A HREF="#PrimoSDK_UnitStatus">PrimoSDK_UnitStatus</A>, which returns PRIMOSDK_UNITERROR if a disc fails the verification (in which case the parameters <I>pCommand</I>, <I>pSense</I>, <I>pASC</I>, and <I>pASCQ</I> will all be set to &quot;0&quot;).</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_VerifyImage ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the verification speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by the drive;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the data structure hasn&#39;t yet been started, or the data structure is empty.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters in the function are incorrect, or no drives have been specified with <I>pdwUnits</I> in PrimoSDK_NewImage or PrimoSDK_NewImageWCS.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The unit is not ready.
</P>
<P CLASS="Code_Ital">PRIMOSDK_TMPOVERFLOW</P>
<P CLASS="Def_Field">A temporary file went into overflow.</P>
<P CLASS="Code_Ital">PRIMOSDK_DVDSTRUCTERROR</P>
<P CLASS="Def_Field">The data structure includes a VIDEO_TS or AUDIO_TS folder that is not compliant with DVD-Video or DVD-Audio rules (DVD version only).</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">A file that was added to the data structure can no longer be found.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_CloseImage">PrimoSDK_CloseImage</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Data CD and DVD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_CloseImage is required to terminate and free the resources allocated to a data structure created with <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A> when that structure is no longer needed. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_CloseImage ( </P>
<P CLASS="Code_Indent">DWORD dwHandle </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in thePrimoSDK_NewImage or PrimoSDK_NewImageWCS call with which the structure was created.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or the data structure hasn&#39;t yet been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="Audio CD Images">6.8 &nbsp;Audio CD Images</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_NewAudio">PrimoSDK_NewAudio</A>, <A HREF="#PrimoSDK_AddAudioTrack">PrimoSDK_AddAudioTrack</A>, <A HREF="#PrimoSDK_AddCDText">PrimoSDK_AddCDText</A>, <A HREF="#PrimoSDK_AddCDTextEJ">PrimoSDK_AddCDTextEJ</A>, <A HREF="#PrimoSDK_WriteAudio">PrimoSDK_WriteAudio</A>, <A HREF="#PrimoSDK_CloseAudio">PrimoSDK_CloseAudio</A>, <A HREF="#PrimoSDK_WriteAudioTrack">PrimoSDK_WriteAudioTrack</A></P>
<P CLASS="IndentSerif">These calls are used to create Audio CDs.<BR>
<BR>
<B>NOTE</B>: Additional functionality related to Audio CDs is available via PrimoSDK&#39;s Advanced Audio calls (licensed separately from the standard version of PrimoSDK), which are documented in the <A HREF="PS_Guide_7.htm#Advanced Audio Addendum"><SPAN CLASS="Arial_Inline"><B>Advanced Audio Addendum</B></SPAN></A>.</P>
<P CLASS="SubHead_Sans12"><A ID="Audio CD Workflow">Audio CD Workflow</A></P>
<P CLASS="IndentSerif">PrimoSDK supports two methods for creating audio CDs:</P>
<UL CLASS="IndentSerif_List"><LI><B><A ID="Track-at-Once">Track-at-Once</A></B> &#151; use <A HREF="#PrimoSDK_WriteAudioTrack">PrimoSDK_WriteAudioTrack</A> to write individual audio tracks to disc without first creating and populating a structure.</LI>
<LI><B><A ID="Disk-at-Once">Disk-at-Once</A></B> &#151; start a new data structure for the Audio CD, populate the structure with tracks, then write the structure to disc.</LI></UL>
<P CLASS="IndentSerif">The following is a typical workflow for a Disc-at-Once Audio CD:</P>
<OL CLASS="IndentSerif_NumList"><LI>Start a new Audio CD structure (see table below to determine correct call to use);</LI>
<LI>Populate the structure with audio tracks (see table below to determine correct call);</LI>
<LI>Add CD Text information to the structure with <A HREF="#PrimoSDK_AddCDText">PrimoSDK_AddCDText</A> or <A HREF="#PrimoSDK_AddCDTextEJ">PrimoSDK_AddCDTextEJ</A>;</LI>
<LI>Record the entire structure to disc with <A HREF="#PrimoSDK_WriteAudio">PrimoSDK_WriteAudio</A>, or <A HREF="PS_Guide_7.htm#PrimoSDK_WriteAudioEx">PrimoSDK_WriteAudioEx</A> if using PrimoSDK&#39;s Advanced Audio functions (licensed separately from the standard version of PrimoSDK);</LI>
<LI>Call <A HREF="#PrimoSDK_CloseAudio">PrimoSDK_CloseAudio</A> to terminate and clean up the structure.</LI></OL>
<P CLASS="IndentSerif">As shown in the following table, the calls used to start an Audio CD structure and populate it with individual tracks vary depending on both the PrimoSDK version used (see <A HREF="#PrimoSDK Options in Chapter "><SPAN CLASS="Arial_Inline"><B>PrimoSDK Options</B> </SPAN>in Chapter </A><A HREF="#1">1</A>) and the format of the source audio files that will be included on the CD:</P>
<TABLE ALIGN="center" WIDTH="95%" BORDER="1" CELLSPACING="0" CELLPADDING="5" CLASS="TableSans"><TBODY VALIGN="top">
<TR CLASS="TableSansHead"><TD>&nbsp;</TD>
<TD>PrimoSDK</TD>
<TD>PrimoSDKPlus</TD>
<TD>PrimoSDK with Advanced Audio</TD>
<TD>PrimoSDKPlus with<BR>
Advanced Audio</TD></TR>
<TR><TD><B>.WAV</B></TD>
<TD><I><I>start structure:</I></I><BR>
<A HREF="#PrimoSDK_NewAudio">PrimoSDK_NewAudio</A><BR><I>add tracks:</I><BR>
<A HREF="#PrimoSDK_AddAudioTrack">PrimoSDK_AddAudioTrack</A></TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrack</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <I><I>or</I></I> <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist">PrimoSDK_NewAudioPlaylist</A><BR><I>add tracks:</I><BR>
<A HREF="PS_Guide_7.htm#PrimoSDK_AddAudioTrackEx">PrimoSDK_AddAudioTrackEx</A> <I>or</I> PrimoSDK_AddAudioTrack</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <I><I>or</I></I> PrimoSDK_NewAudioPlaylist<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD></TR>
<TR><TD><B>.M4A</B></TD>
<TD>N.A.</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrack</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <I><I>or</I></I> PrimoSDK_NewAudioPlaylist<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <I><I>or</I></I> PrimoSDK_NewAudioPlaylist<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD></TR>
<TR><TD><B>.MP3</B></TD>
<TD>N.A.</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrack</TD>
<TD>N.A.</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <I><I>or</I></I> PrimoSDK_NewAudioPlaylist<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD></TR>
<TR><TD><B>.WMA</B><BR>
(no DRM)</TD>
<TD>N.A.</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrack</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <I><I>or</I></I> PrimoSDK_NewAudioPlaylist<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudio <I><I>or</I></I> PrimoSDK_NewAudioPlaylist<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD></TR>
<TR><TD><B>.WMA</B><BR>
(with DRM)</TD>
<TD>N.A.</TD>
<TD>N.A.</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudioPlaylist<BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD>
<TD><I><I>start structure:</I></I><BR>
PrimoSDK_NewAudioPlaylist <BR><I>add tracks:</I><BR>
PrimoSDK_AddAudioTrackEx <I>or</I> PrimoSDK_AddAudioTrack</TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif"><B>NOTES</B>: <BR>
<B>&#187; </B>QuickTime is required for <SPAN CLASS="Courier_New_Inline"><B>.</B>M4A </SPAN>support.<BR>
<B>&#187;</B> If using PrimoSDK&#39;s Advanced Audio functions (licensed separately from the standard version of PrimoSDK) audio may also be added to a CD Audio structure from a stream rather than a file; see <A HREF="PS_Guide_7.htm#PrimoSDK_AddAudioStream">PrimoSDK_AddAudioStream</A>.<BR>
<B>&#187;</B> For example code illustrating the creation and writing of a simple audio disc, see <A HREF="PS_Guide_3.htm#Audio CD Example Code"><SPAN CLASS="Arial_Inline"><B>Audio CD Example Code</B></SPAN></A> in Chapter 3.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_NewAudio">PrimoSDK_NewAudio</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Audio CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_NewAudio initiates the building of a structure for an Audio CD image. As outlined in <A HREF="#Audio CD Workflow"><SPAN CLASS="Arial_Inline"><B>Audio CD Workflow</B></SPAN></A>, the structure is subsequently populated with audio tracks, at which point it may be written to a disc in the drive specified with <I>pdwUnits</I>.<BR>
<BR>
<B>NOTES</B>:<BR>
<B>&#187;</B> Some versions of PrimoSDK also allow an Audio CD structure to be created with <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist">PrimoSDK_NewAudioPlaylist</A>, which supports Windows Media Digital Rights Management when using <SPAN CLASS="Courier_New_Inline">.WMA </SPAN>source files (see <SPAN CLASS="Arial_Inline"><B>Audio CD Workflow</B></SPAN>).<BR>
<B>&#187;</B> To record an Audio CD track-by-track without first building a structure for the disc, see <A HREF="#PrimoSDK_WriteAudioTrack">PrimoSDK_WriteAudioTrack</A>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_NewAudio ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying the destination drives by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple (see PrimoSDK_UnitInfo for the internal DWORD format).</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">A unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">A unit is not ready.
</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDMEDIUM</P>
<P CLASS="Def_Field">One or more target discs is not a blank CD-R or CD-RW.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddAudioTrack">PrimoSDK_AddAudioTrack</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Audio CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddAudioTrack adds a track to an Audio CD structure. A fuller-featured alternative to this call is <A HREF="PS_Guide_7.htm#PrimoSDK_AddAudioTrackEx">PrimoSDK_AddAudioTrackEx</A>, available to licensees of PrimoSDK&#39;s Advanced Audio functions (see <A HREF="PS_Guide_7.htm#Advanced Audio Addendum"><SPAN CLASS="Arial_Inline"><B>Advanced Audio Addendum</B></SPAN></A> Chapter 7).<BR>
<BR>
The Audio CD structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created. Audio CD structures are created either with <A HREF="#PrimoSDK_NewAudio">PrimoSDK_NewAudio</A> or, for support of Windows Media Digital Rights Management when using <SPAN CLASS="Courier_New_Inline">.WMA </SPAN>source files, with<B> <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist"></B>PrimoSDK_NewAudioPlaylist</A> (available only if the PrimoSDK license includes Advanced Audio).<BR>
<BR>
As outlined in <A HREF="#Audio CD Workflow"><SPAN CLASS="Arial_Inline"><B>Audio CD Workflow</B></SPAN></A>, after the structure is populated with tracks it may be written to a disc, with the tracks sequenced in the order they were added.<BR>
<BR>
The audio file to add to the Audio CD structure is specified with <I>szTrack</I>. If the PrimoSDK DLL is PrimoSDK.DLL, this file must be a Wave (<SPAN CLASS="Courier_New_Inline">.WAV</SPAN>) file. If the PrimoSDK DLL is PXSDKPLS.DLL, the file may be in Wave (<SPAN CLASS="Courier_New_Inline">.WAV</SPAN>), MPEG-1 Layer 3 (<SPAN CLASS="Courier_New_Inline">.mp3</SPAN>), or Windows Media Audio (<SPAN CLASS="Courier_New_Inline">.wma</SPAN>) format.<BR>
<BR>
The pregap for the track is specified with <I>dwPregap</I>. When the call executes, the size (in sectors) of the added track is output with <I>pdwSize</I>.<BR>
<BR>
<B>NOTE</B>: If your license includes PrimoSDK&#39;s Advanced Audio functions, see <A HREF="PS_Guide_7.htm#PrimoSDK_AddAudioTrackEx">PrimoSDK_AddAudioTrackEx</A> instead of this call.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddAudioTrack ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szTrack,<BR>
DWORD dwPreGap,<BR>
PDWORD pdwSize </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewAudio call with which the Audio CD structure was created.</P>
<P CLASS="Code_Ital">szTrack</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the complete path of the audio source file for the track.</P>
<P CLASS="Code_Ital">dwPregap</P>
<P CLASS="Def_Field">A DWORD specifying the track&#39;s pregap in sectors. The entire pregap is silent. The first track (first song) will always have a pregap of 150 blocks (regardless of the value passed with this parameter).</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSize</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the size in sectors of the file specified with <I>szTrack</I>.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or no Audio CD structure has been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The file path specified with <I>szTrack</I> is incorrect, or the file is not valid.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szTrack</I> was not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddCDText">PrimoSDK_AddCDText</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Audio CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddCDText adds English-only CD Text information (title, performer, and composer) to an Audio CD stucture. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created. Audio CD structures are created either with <A HREF="#PrimoSDK_NewAudio">PrimoSDK_NewAudio</A> or, for support of Windows Media Digital Rights Management when using <SPAN CLASS="Courier_New_Inline">.WMA </SPAN>source files, with<B> <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist"></B>PrimoSDK_NewAudioPlaylist</A> (available only if the PrimoSDK license includes Advanced Audio).<BR>
<BR>
The CD Text information, specified with <I>szTitle</I>, <I>szPerformer</I>, and <I>szComposer</I>, covers both the disc-level information and the information for each individual track. <BR>
<BR>
As outlined in <A HREF="#Audio CD Workflow"><SPAN CLASS="Arial_Inline"><B>Audio CD Workflow</B></SPAN></A> above, this function is called after the structure is populated with tracks and before it is written to a disc.<BR>
<BR>
<B>NOTE</B>: The maximum size of <I>szTitle</I>, <I>szPerformer</I>, and <I>szComposer</I> is 2000 bytes each.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddCDText ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwFlags,<BR>
PBYTE szTitle,<BR>
PBYTE szPerformer,<BR>
PBYTE szComposer </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewAudio call with which the Audio CD structure was created.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">Reserved for future use. Pass 0 for this parameter.</P>
<P CLASS="Code_Ital">szTitle</P>
<P CLASS="Def_Field">A pointer to a BYTE containing a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the title for the disc, the second line is the title of the first track, the third line is the title of the second track, etc.</P>
<P CLASS="Code_Ital">szPerformer</P>
<P CLASS="Def_Field">A pointer to a BYTE containing a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the performer for the disc, the second line is the performer of the first track, the third line is the performer of the second track, etc.</P>
<P CLASS="Code_Ital">szComposer</P>
<P CLASS="Def_Field">A pointer to a BYTE containing a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the composer for the disc, the second line is the composer of the first track, the third line is the composer of the second track, etc.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or no Audio CD structure has been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddCDTextEJ">PrimoSDK_AddCDTextEJ</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Audio CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddCDTextEJ adds English and Japanese CD Text information (title, performer, and composer) to an Audio CD stucture. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created. Audio CD structures are created either with <A HREF="#PrimoSDK_NewAudio">PrimoSDK_NewAudio</A> or, for support of Windows Media Digital Rights Management when using <SPAN CLASS="Courier_New_Inline">.WMA </SPAN>source files, with<B> <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist"></B>PrimoSDK_NewAudioPlaylist</A> (available only if the PrimoSDK license includes Advanced Audio).<BR>
<BR>
The CD Text information covers both the disc-level information and the information for each individual track. English information is specified with <I>szTitleE</I>, <I>szPerformerE</I>, and <I>szComposerE</I>, each of which is limited to 2000 bytes. Japanese information is specified with <I>szTitleJ</I>, <I>szPerformerJ</I>, and <I>szComposerJ</I>. The Japanese strings, each of which is limited to 2000 bytes, must be passed in Shift JIS (double-byte).<BR>
<BR>
As outlined in <A HREF="#Audio CD Workflow"><SPAN CLASS="Arial_Inline"><B>Audio CD Workflow</B></SPAN></A> above, this function is called after the structure is populated with tracks and before it is written to a disc.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddCDTextEJ ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwFlags,<BR>
PBYTE szTitleE,<BR>
PBYTE szPerformerE,<BR>
PBYTE szComposerE,<BR>
PBYTE szTitleJ,<BR>
PBYTE szPerformerJ,<BR>
PBYTE szComposerJ </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewAudio call with which the Audio CD structure was created.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">Reserved for future use. Pass 0 for this parameter.</P>
<P CLASS="Code_Ital">szTitleE</P>
<P CLASS="Def_Field">A pointer to a BYTE containing a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the title for the disc, the second line is the title of the first track, the third line is the title of the second track, etc.</P>
<P CLASS="Code_Ital">szPerformerE</P>
<P CLASS="Def_Field">A pointer to a BYTE containing a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the performer for the disc, the second line is the performer of the first track, the third line is the performer of the second track, etc.</P>
<P CLASS="Code_Ital">szComposerE</P>
<P CLASS="Def_Field">A pointer to a BYTE containing a multiline string in English, where each line is delimited by &lt;CR&gt;&lt;LF&gt;. The first line is the composer for the disc, the second line is the composer of the first track, the third line is the composer of the second track, etc.</P>
<P CLASS="Code_Ital">szTitleJ</P>
<P CLASS="Def_Field">Same as <I>szTitleE</I>, but in Japanese.</P>
<P CLASS="Code_Ital">szPerformerJ</P>
<P CLASS="Def_Field">Same as <I>szPerformerE</I>, but in Japanese.</P>
<P CLASS="Code_Ital">szComposerJ</P>
<P CLASS="Def_Field">Same as <I>szComposerE</I>, but in Japanese.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or no Audio CD structure has been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_WriteAudio">PrimoSDK_WriteAudio</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Audio CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_WriteAudio writes an Audio CD structure in Disc-at-Once mode to one or more discs, either actually or in &quot;test write&quot; mode. A fuller-featured alternative to this call is <A HREF="PS_Guide_7.htm#PrimoSDK_WriteAudioEx">PrimoSDK_WriteAudioEx</A>, available to licensees of PrimoSDK&#39;s Advanced Audio functions (see <A HREF="PS_Guide_7.htm#Advanced Audio Addendum"><SPAN CLASS="Arial_Inline"><B>Advanced Audio Addendum</B></SPAN></A> Chapter 7).<BR>
<BR>
As outlined in <A HREF="#Audio CD Workflow"><SPAN CLASS="Arial_Inline"><B>Audio CD Workflow</B></SPAN></A> above, this function is called after the Audio CD structure is populated with tracks and CD Text information (if any). The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created. Audio CD structures are created either with <A HREF="#PrimoSDK_NewAudio">PrimoSDK_NewAudio</A> or, for support of Windows Media Digital Rights Management when using <SPAN CLASS="Courier_New_Inline">.WMA </SPAN>source files, with<B> <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist"></B>PrimoSDK_NewAudioPlaylist</A> (available only if the PrimoSDK license includes Advanced Audio). <BR>
<BR>
The drives on which the discs will be recorded are those specified with <I>pdwUnits</I> in that same PrimoSDK_NewAudio call. Each recorder must already contain a blank recordable&#47;rewritable disc (see <I>pdwMediumType</I> under <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>).<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>. After PrimoSDK_RunningStatus reports that the operation has completed (successful or otherwise), this function may be called again to record additional passes of the image on fresh media. When no further passes are required, <A HREF="#PrimoSDK_CloseAudio">PrimoSDK_CloseAudio</A> may be called to release the structure.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>This call is used as part of the recommended write operation sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.<BR>
<B>&#187; </B>For normal audio discs, close the disc to further writing by passing PRIMOSDK_CLOSEDISC in <I>dwFlags</I>.<B> <BR>
&#187; </B>An error will result if an attempt is made to write an Audio CD structure that is a playlist (see <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist">PrimoSDK_NewAudioPlaylist</A>) containing a protected track (see <A HREF="PS_Guide_7.htm#PrimoSDK_CheckAudioPlaylist">PrimoSDK_CheckAudioPlaylist</A>). To write the structure without the protected track(s), delete the structure with PrimoSDK_CloseAudio, then create a new structure with PrimoSDK_NewAudioPlaylist.<BR>
<B>&#187; </B>To record an Audio CD track-by-track rather than from a completed Audio CD structure, see <A HREF="#PrimoSDK_WriteAudioTrack">PrimoSDK_WriteAudioTrack</A>.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_WriteAudio ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewAudio call with which the Audio CD structure was created.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_WRITE to make a real recording, or PRIMOSDK_TEST to run a test;<BR>
- PRIMOSDK_BURNPROOF to enable BURN-Proof (buffer underrun protection) if available on the destination drive;<BR>
- PRIMOSDK_CLOSEDISC to close the disc to further writing (recommended for most Audio CD discs).</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by both the destination drive and destination media;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x);<BR>
- PRIMOSDK_BEST for drives that support Adjustable Write Speed. If the drive does not support AWS, the speed will revert to PRIMOSDK_MAX.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the Audio CD structure hasn&#39;t yet been started, or the Audio CD structure is empty.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters in the function are incorrect, or no drives have been specified with <I>pdwUnits</I> in PrimoSDK_NewAudio.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">One or more units are not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">One or more of the media do not have enough free sectors.</P>
<P CLASS="Code_Ital">PRIMOSDK_ITSADEMO</P>
<P CLASS="Def_Field">The operation exceeds the limits allowed by the Demo version of PrimoSDK.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_CloseAudio">PrimoSDK_CloseAudio</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Audio CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_CloseAudio is required to terminate and free the resources allocated to an Audio CD structure when that structure is no longer needed. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created. Audio CD structures are created either with <A HREF="#PrimoSDK_NewAudio">PrimoSDK_NewAudio</A> or, for support of Windows Media Digital Rights Management when using <SPAN CLASS="Courier_New_Inline">.WMA </SPAN>source files, with<B> <A HREF="PS_Guide_7.htm#PrimoSDK_NewAudioPlaylist"></B>PrimoSDK_NewAudioPlaylist</A> (available only if the PrimoSDK license includes Advanced Audio).</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_CloseAudio ( </P>
<P CLASS="Code_Indent">DWORD dwHandle </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewAudio call with which the Audio CD structure was created.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or the Audio CD structure hasn&#39;t yet been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_WriteAudioTrack">PrimoSDK_WriteAudioTrack</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Audio CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_WriteAudioTrack writes a single track from a source file to one or more discs in the recorders specified with <I>pdwUnits</I>. Unlike PrimoSDK_WriteAudio (which records in Disc-at-Once mode), the recording does not require advance creation of an Audio CD structure as described in <A HREF="#Audio CD Workflow"><SPAN CLASS="Arial_Inline"><B>Audio CD Workflow</B></SPAN></A> above. Instead, it is carried out in Track-at-Once (TAO) mode, with one track added each time the function is called. The destination disc(s) may be blank (if this is the first track added) or already contain one or more audio tracks.<BR>
<BR>
The audio file to record to the Audio CD is specified with <I>szTrack</I>. If the PrimoSDK DLL is PrimoSDK.DLL, this file must be a Wave (<SPAN CLASS="Courier_New_Inline">.WAV</SPAN>) file. If the PrimoSDK DLL is PXSDKPLS.DLL, the file may be in Wave (<SPAN CLASS="Courier_New_Inline">.WAV</SPAN>), MPEG-1 Layer 3 (<SPAN CLASS="Courier_New_Inline">.mp3</SPAN>), or Windows Media Audio (<SPAN CLASS="Courier_New_Inline">.wma</SPAN>) format. The recording speed is specified with <I>dwSpeed</I>. <BR>
<BR>
If this track is the last to be added to the CD, the parameter <I>dwFlags</I> should include the PRIMOSDK_CLOSEDISC flag so that the disc will be finalized, after which it will be playable in a CD-ROM drive or a consumer CD-Audio player. If the intent is to add additional tracks later; then that flag should not be set. <I>dwFlags</I> also determines whether or not the drives are in &quot;test write&quot; mode for this operation.<BR>
<BR>
<B>NOTE</B>: This call is used as part of the recommended write operation sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_WriteAudioTrack ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PBYTE szTrack,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szTrack</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the complete path of the audio source file for the track.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_WRITE to make a real recording, or PRIMOSDK_TEST to run a test;<BR>
- PRIMOSDK_BURNPROOF to enable BURN-Proof (buffer underrun protection) if available on the destination drive;<BR>
- PRIMOSDK_CLOSEDISC to close the disc to further writing (recommended for most Audio CD discs).</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by both the destination drive and destination media;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x);<BR>
- PRIMOSDK_BEST for drives that support Adjustable Write Speed. If the drive does not support AWS, the speed will revert to PRIMOSDK_MAX.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple the drives containing the discs to which the audio track is to be written (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format). The vector is terminated by 0xFFFFFFFF.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">One or more units are not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">One or more of the media do not have enough free sectors.</P>
<P CLASS="Code_Ital">PRIMOSDK_ITSADEMO</P>
<P CLASS="Def_Field">The operation exceeds the limits allowed by the Demo version of PrimoSDK.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR SIZE=2 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=50><TR><TD CLASS="Heading2"><A ID="Video CD Images">6.9 &nbsp;Video CD Images</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">This section covers the following calls:</P>
<P CLASS="Code"><A HREF="#PrimoSDK_NewVideoCD">PrimoSDK_NewVideoCD</A>, <A HREF="#PrimoSDK_AddVideoCDStream">PrimoSDK_AddVideoCDStream</A>, <A HREF="#PrimoSDK_WriteVideoCD">PrimoSDK_WriteVideoCD</A>, <A HREF="#PrimoSDK_CloseVideoCD">PrimoSDK_CloseVideoCD</A></P>
<P CLASS="IndentSerif">These calls are used to create a structure for a Video CD based on a standard basic template (the <SPAN CLASS="Courier_New_Inline">VCD.DTA </SPAN>file that is provided as part of the PrimoSDK toolkit) and to write that structure to disc. Alternatively, more sophisticated Video CDs may be authored independently of PrimoSDK, and then incorporated into a structure using PrimoSDK&#39;s calls for creating data discs (see <A HREF="#Data CD and DVD Images"><SPAN CLASS="Arial_Inline"><B>Data CD and DVD Images</B></SPAN></A>).</P>
<P CLASS="SubHead_Sans12"><A ID="Video CD Workflow">Video CD Workflow</A></P>
<P CLASS="IndentSerif">The following is a typical workflow for building a template-based Video CD structure from a set of MPEG-1 stream files and then writing the image to disc (Disc-at-Once):</P>
<OL CLASS="IndentSerif_NumList"><LI>Start a new Video CD structure with <A HREF="#PrimoSDK_NewVideoCD">PrimoSDK_NewVideoCD</A>;</LI>
<LI>Populate the structure with video streams using <A HREF="#PrimoSDK_AddVideoCDStream">PrimoSDK_AddVideoCDStream</A>;</LI>
<LI>Record the entire structure to disc with <A HREF="#PrimoSDK_WriteVideoCD">PrimoSDK_WriteVideoCD</A>;</LI>
<LI>Call <A HREF="#PrimoSDK_CloseVideoCD">PrimoSDK_CloseVideoCD</A> to terminate and clean up the structure.</LI></OL>
<P CLASS="IndentSerif">The following is a typical workflow for incorporating an independently-authored Video CD image into a data disc structure created with PrimoSDK:</P>
<OL CLASS="IndentSerif_NumList"><LI>Initiate a new data structure by calling <A HREF="#PrimoSDK_NewImage">PrimoSDK_NewImage</A> or <A HREF="#PrimoSDK_NewImageWCS">PrimoSDK_NewImageWCS</A> with PRIMOSDK_VIDEOCD included in <I>dwFlags</I>.</LI>
<LI>Add the directories and files of the independently-authored Video CD image with <A HREF="#PrimoSDK_AddFolder">PrimoSDK_AddFolder</A>, <A HREF="#PrimoSDK_AddFolderWCS">PrimoSDK_AddFolderWCS</A>, <A HREF="#PrimoSDK_AddFile">PrimoSDK_AddFile</A>, and&#47;or <A HREF="#PrimoSDK_AddFileWCS">PrimoSDK_AddFileWCS</A>.</LI>
<LI>Record the entire structure to disc with <A HREF="#PrimoSDK_WriteImage">PrimoSDK_WriteImage</A>.</LI>
<LI>Call <A HREF="#PrimoSDK_CloseImage">PrimoSDK_CloseImage</A> to terminate and clean up the structure.</LI></OL>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_NewVideoCD">PrimoSDK_NewVideoCD</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Video CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_NewVideoCD initiates the building of a structure for a Video CD image. As outlined in <A HREF="#Video CD Images"><SPAN CLASS="Arial_Inline"><B>Video CD Images</B></SPAN></A> above, the structure is subsequently populated with video streams, at which point it may be written to a disc in a drive specified with <I>pdwUnits</I>.<BR>
<BR>
Immediately prior to the start of writing (see <A HREF="#PrimoSDK_WriteVideoCD">PrimoSDK_WriteVideoCD</A>), PrimoSDK generates VCD-compatible versions of the source video files that have been added to the structure.<I> szTemp</I> specifies the temporary directory in which those versions are to be stored. The space available for the folder&#39;s contents must exceed 2336 (bytes per sector) times the sum of all the values of <I>pdwSize</I> that were output by <A HREF="#PrimoSDK_AddVideoCDStream">PrimoSDK_AddVideoCDStream</A> each time a stream was added to the structure.<BR>
<BR>
<I>szVideoCDTemplate</I> specifies the path of the PrimoSDK accessory file <SPAN CLASS="Courier_New_Inline">Vcd.dta</SPAN>. This file is used only for creating Video CDs, and must be included in installations featuring Video CD creation. It is not included as a resource in the PrimoSDK DLL so that overhead is minimized for implementations that do not create Video CDs.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_NewVideoCD ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PDWORD pdwUnits,<BR>
PBYTE szTemp,<BR>
PBYTE szVideoCDTemplate </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>).</P>
<P CLASS="Code_Ital">szTemp</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the directory in which VCD-compatible versions of  video source files will be generated immediately before the start of recording. The space needed in this temporary folder 2336 times the sum of the sectors returned into <I>pdwSize</I> by all the calls to PrimoSDK_AddVideoCDStream.</P>
<P CLASS="Code_Ital">szVideoCDTemplate</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the path of the accessory file Vcd.dta, which is provided with PrimoSDK.</P>
<P CLASS="SubHead_SubSans11">Input&#47;Output</P>
<P CLASS="Code_Ital">pdwUnits</P>
<P CLASS="Def_Field">A pointer to a DWORD vector identifying by drive letter and&#47;or SCSI Host&#47;ID&#47;LUN triple the drives containing the discs to which the audio track is to be written (see <A HREF="#PrimoSDK_UnitInfo">PrimoSDK_UnitInfo</A> for the internal DWORD format). The vector is terminated by 0xFFFFFFFF.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADUNIT</P>
<P CLASS="Def_Field">The unit specified with <I>pdwUnit</I> does not exist.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The value of one or more parameters is invalid.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">The unit is not ready.
</P>
<P CLASS="Code_Ital">PRIMOSDK_INVALIDMEDIUM</P>
<P CLASS="Def_Field">One or more target discs is not a blank CD-R or CD-RW.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szVideoCDTemplate</I> is not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_AddVideoCDStream">PrimoSDK_AddVideoCDStream</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Video CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_AddVideoCDStream adds a stream to a Video CD structure. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (see <A HREF="#PrimoSDK_NewVideoCD">PrimoSDK_NewVideoCD</A>). As outlined in <A HREF="#Video CD Images"><SPAN CLASS="Arial_Inline"><B>Video CD Images</B></SPAN></A> above, after the structure is populated with streams it may be written to a disc.<BR>
<BR>
The MPEG video file to add to the Video CD structure is specified with <I>szStream</I>. The associated audio must be stereo at a sample rate of44.1 KHz. The video stream format must be one of the following:</P>
<TABLE ALIGN="center" WIDTH="95%" BORDER="1" CELLSPACING="0" CELLPADDING="5" CLASS="TableSans"><TBODY VALIGN="top">
<TR CLASS="TableSansHead"><TD>Format</TD>
<TD>Resolution</TD>
<TD>Frame rate (fps)</TD></TR>
<TR><TD><B>NTSC</B></TD>
<TD>352 &#215; 240</TD>
<TD>29.97</TD></TR>
<TR><TD><B>PAL</B></TD>
<TD>352 &#215; 288</TD>
<TD>25</TD></TR>
<TR><TD><B>Film</B></TD>
<TD>352 &#215; 240</TD>
<TD>29.97</TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">When the call executes, the size in sectors of the added stream is output with <I>pdwSize</I>.<BR>
<BR>
<B>NOTE</B>: PrimoSDK allows a maximum of 32 streams in a Video CD.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_AddVideoCDStream ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
PBYTE szStream,<BR>
PDWORD pdwSize </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewVideoCD call with which the Video CD structure was created.</P>
<P CLASS="Code_Ital">szStream</P>
<P CLASS="Def_Field">A pointer to a BYTE specifying the complete path of the MPEG-1 source file for the stream.</P>
<P CLASS="SubHead_SubSans11">Output</P>
<P CLASS="Code_Ital">pdwSize</P>
<P CLASS="Def_Field">A pointer to the DWORD that is to be filled in with the size in sectors of the stream specified with <I>szStream</I>.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or no Video CD structure has been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The file specified with <I>szStream</I> is not valid.</P>
<P CLASS="Code_Ital">PRIMOSDK_FILEERROR</P>
<P CLASS="Def_Field">The file specified with <I>szStream</I> was not found.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_WriteVideoCD">PrimoSDK_WriteVideoCD</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Video CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_WriteVideoCD writes a Video CD structure to one or more discs, either actually or in &quot;test write&quot; mode. As outlined in <A HREF="#Video CD Images"><SPAN CLASS="Arial_Inline"><B>Video CD Images</B></SPAN></A> above, this function is called after the structure is populated with video streams.<BR>
<BR>
The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created (see <A HREF="#PrimoSDK_NewVideoCD">PrimoSDK_NewVideoCD</A>). The drives on which the discs will be recorded are those specified with <I>pdwUnits</I> in that same PrimoSDK_NewVideoCD call. Each recorder must already contain a blank recordable&#47;rewritable disc (see <I>pdwMediumType</I> under <A HREF="#PrimoSDK_DiscInfoEx">PrimoSDK_DiscInfoEx</A>).<BR>
<BR>
This function returns immediately and continues asynchronously. To check on or abort the operation, see <A HREF="#PrimoSDK_RunningStatus">PrimoSDK_RunningStatus</A>. After PrimoSDK_RunningStatus reports that the operation has completed (successful or otherwise), this function may be called again to record additional passes of the image on fresh media. When no further passes are required, <A HREF="#PrimoSDK_CloseVideoCD">PrimoSDK_CloseVideoCD</A> may be called to release the structure.<BR>
<BR>
<B>NOTES:<BR>
&#187; </B>This call is used as part of the recommended write operation sequence described in <A HREF="#Drive Control Sequence"><SPAN CLASS="Arial_Inline"><B>Drive Control Sequence</B></SPAN></A> above.<BR>
<B>&#187; </B>A Video CD disc written with the call will always be closed (finalized).</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_WriteVideoCD ( </P>
<P CLASS="Code_Indent">DWORD dwHandle,<BR>
DWORD dwFlags,<BR>
DWORD dwSpeed </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewVideoCD call with which the Audio CD structure was created.</P>
<P CLASS="Code_Ital">dwFlags</P>
<P CLASS="Def_Field">A DWORD in which all of the following that apply are ORed together:<BR>
- PRIMOSDK_WRITE to make a real recording, or PRIMOSDK_TEST to run a test;<BR>
- PRIMOSDK_BURNPROOF to enable BURN-Proof (buffer underrun protection) if available on the destination drive.</P>
<P CLASS="Code_Ital">dwSpeed</P>
<P CLASS="Def_Field">A DWORD specifying the recording speed as one of the following:<BR>
- PRIMOSDK_MAX for the highest speed supported by both the destination drive and destination media;<BR>
- n for the actual number of the desired speed (e.g. 8 for 8x);<BR>
- PRIMOSDK_BEST for drives that support Adjustable Write Speed. If the drive does not support AWS, the speed will revert to PRIMOSDK_MAX.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK </P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, the Video CD structure hasn&#39;t yet been started, or the Video CD structure is empty.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADPARAM</P>
<P CLASS="Def_Field">The parameters in the function are incorrect, or no drives have been specified with <I>pdwUnits</I> in PrimoSDK_NewVideoCD.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOTREADY</P>
<P CLASS="Def_Field">One or more units are not ready.</P>
<P CLASS="Code_Ital">PRIMOSDK_NOSPACE</P>
<P CLASS="Def_Field">One or more of the media do not have enough free sectors.</P>
<P CLASS="Code_Ital">PRIMOSDK_ITSADEMO</P>
<P CLASS="Def_Field">The operation exceeds the limits allowed by the Demo version of PrimoSDK.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured</P>
<HR noshade SIZE=1 WIDTH="93%"><TABLE width="93%" align=center border=0><TBODY><col><col width=110><TR><TD CLASS="Heading4"><A ID="PrimoSDK_CloseVideoCD">PrimoSDK_CloseVideoCD</A></TD><TD class="IndentSansVisited">go: &nbsp;<A HRef="#chapter">top</A> &nbsp; &nbsp;| &nbsp; &nbsp;<A HRef="#Video CD Images">section</A></TD></TR></TBODY></TABLE>
<P CLASS="IndentSerif">PrimoSDK_CloseVideoCD is required to terminate and free the resources allocated to a Video CD structure created with <A HREF="#PrimoSDK_NewVideoCD">PrimoSDK_NewVideoCD</A> when that structure is no longer needed. The structure is indentified by the parameter <I>dwHandle</I>, which must have the same value as in the call with which the structure was created.</P>
<P CLASS="SubHead_Sans11">Syntax</P>
<P CLASS="Code">DWORD WINAPI PrimoSDK_CloseVideoCD ( </P>
<P CLASS="Code_Indent">DWORD dwHandle </P>
<P CLASS="Code">);</P>
<P CLASS="SubHead_Sans11">Parameters</P>
<P CLASS="SubHead_SubSans11">Input</P>
<P CLASS="Code_Ital">dwHandle</P>
<P CLASS="Def_Field">A DWORD specifying the operation&#39;s handle (see <A HREF="#PrimoSDK_GetHandle">PrimoSDK_GetHandle</A>), which must have the same value as in the PrimoSDK_NewVideoCD call with which the Video CD structure was created.</P>
<P CLASS="SubHead_Sans11">Returned values</P>
<P CLASS="Code_Ital">PRIMOSDK_OK</P>
<P CLASS="Def_Field">The call completed successfully.</P>
<P CLASS="Code_Ital">PRIMOSDK_CMDSEQUENCE</P>
<P CLASS="Def_Field">PrimoSDK is not yet initialized, or the video CD structure hasn&#39;t yet been started.</P>
<P CLASS="Code_Ital">PRIMOSDK_BADHANDLE</P>
<P CLASS="Def_Field"><I>dwHandle</I> is not a valid handle.</P>
<P CLASS="Code_Ital">PRIMOSDK_INTERR</P>
<P CLASS="Def_Field">An internal error occured.</P>
<P CLASS="IndentSans"><A HRef= "#chapter">Top</A></P>
</BODY>
</HTML>
